// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: battlespheres_login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "battlespheres_login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace battlespheresproto_login {
class AccountInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AccountInfo> {
} _AccountInfo_default_instance_;
class LoginKeyInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginKeyInfo> {
} _LoginKeyInfo_default_instance_;
class APPAccountInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<APPAccountInfo> {
} _APPAccountInfo_default_instance_;

namespace protobuf_battlespheres_5flogin_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountInfo, acctname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountInfo, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginKeyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginKeyInfo, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginKeyInfo, loginaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginKeyInfo, loginport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginKeyInfo, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APPAccountInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APPAccountInfo, appid_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(AccountInfo)},
  { 7, -1, sizeof(LoginKeyInfo)},
  { 16, -1, sizeof(APPAccountInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginKeyInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_APPAccountInfo_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "battlespheres_login.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _AccountInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _LoginKeyInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _APPAccountInfo_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AccountInfo_default_instance_.DefaultConstruct();
  _LoginKeyInfo_default_instance_.DefaultConstruct();
  _APPAccountInfo_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031battlespheres_login.proto\022\030battlespher"
      "esproto_login\"1\n\013AccountInfo\022\020\n\010acctname"
      "\030\001 \001(\014\022\020\n\010password\030\002 \001(\014\"S\n\014LoginKeyInfo"
      "\022\016\n\006result\030\001 \001(\005\022\021\n\tloginaddr\030\002 \001(\014\022\021\n\tl"
      "oginPort\030\003 \001(\005\022\r\n\005token\030\004 \001(\014\"\037\n\016APPAcco"
      "untInfo\022\r\n\005appid\030\001 \001(\005*\213\001\n\005msgId\022\n\n\006unus"
      "ed\020\000\022\021\n\014cmdVerifyReq\020\310\001\022\021\n\014cmdVerifyRsp\020"
      "\311\001\022\021\n\014cmdRegistReq\020\312\001\022\021\n\014cmdRegistRsp\020\313\001"
      "\022\024\n\017cmdAPPVerifyReq\020\314\001\022\024\n\017cmdAPPRegistRe"
      "q\020\315\001*\211\002\n\nerror_code\022\013\n\007success\020\000\022\022\n\016serv"
      "er_is_busy\020\001\022\031\n\025need_to_create_a_role\020\002\022"
      "\032\n\026account_already_exists\020d\022\035\n\031account_o"
      "r_password_error\020e\022\026\n\022token_verify_error"
      "\020f\022\030\n\024token_verify_expired\020g\022\030\n\023role_id_"
      "non_existed\020\310\001\022\027\n\022nick_name_too_long\020\311\001\022"
      "\037\n\032nick_name_existing_keyword\020\312\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 640);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "battlespheres_login.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_battlespheres_5flogin_2eproto

const ::google::protobuf::EnumDescriptor* msgId_descriptor() {
  protobuf_battlespheres_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_battlespheres_5flogin_2eproto::file_level_enum_descriptors[0];
}
bool msgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* error_code_descriptor() {
  protobuf_battlespheres_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_battlespheres_5flogin_2eproto::file_level_enum_descriptors[1];
}
bool error_code_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 100:
    case 101:
    case 102:
    case 103:
    case 200:
    case 201:
    case 202:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountInfo::kAcctnameFieldNumber;
const int AccountInfo::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountInfo::AccountInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_battlespheres_5flogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:battlespheresproto_login.AccountInfo)
}
AccountInfo::AccountInfo(const AccountInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  acctname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.acctname().size() > 0) {
    acctname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acctname_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:battlespheresproto_login.AccountInfo)
}

void AccountInfo::SharedCtor() {
  acctname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AccountInfo::~AccountInfo() {
  // @@protoc_insertion_point(destructor:battlespheresproto_login.AccountInfo)
  SharedDtor();
}

void AccountInfo::SharedDtor() {
  acctname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountInfo::descriptor() {
  protobuf_battlespheres_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_battlespheres_5flogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountInfo& AccountInfo::default_instance() {
  protobuf_battlespheres_5flogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountInfo* AccountInfo::New(::google::protobuf::Arena* arena) const {
  AccountInfo* n = new AccountInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:battlespheresproto_login.AccountInfo)
  acctname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AccountInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:battlespheresproto_login.AccountInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes acctname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_acctname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:battlespheresproto_login.AccountInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:battlespheresproto_login.AccountInfo)
  return false;
#undef DO_
}

void AccountInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:battlespheresproto_login.AccountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes acctname = 1;
  if (this->acctname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->acctname(), output);
  }

  // bytes password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:battlespheresproto_login.AccountInfo)
}

::google::protobuf::uint8* AccountInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:battlespheresproto_login.AccountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes acctname = 1;
  if (this->acctname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->acctname(), target);
  }

  // bytes password = 2;
  if (this->password().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:battlespheresproto_login.AccountInfo)
  return target;
}

size_t AccountInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:battlespheresproto_login.AccountInfo)
  size_t total_size = 0;

  // bytes acctname = 1;
  if (this->acctname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->acctname());
  }

  // bytes password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:battlespheresproto_login.AccountInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:battlespheresproto_login.AccountInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:battlespheresproto_login.AccountInfo)
    MergeFrom(*source);
  }
}

void AccountInfo::MergeFrom(const AccountInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:battlespheresproto_login.AccountInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.acctname().size() > 0) {

    acctname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acctname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void AccountInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:battlespheresproto_login.AccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountInfo::CopyFrom(const AccountInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battlespheresproto_login.AccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountInfo::IsInitialized() const {
  return true;
}

void AccountInfo::Swap(AccountInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountInfo::InternalSwap(AccountInfo* other) {
  acctname_.Swap(&other->acctname_);
  password_.Swap(&other->password_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountInfo::GetMetadata() const {
  protobuf_battlespheres_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_battlespheres_5flogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountInfo

// bytes acctname = 1;
void AccountInfo::clear_acctname() {
  acctname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountInfo::acctname() const {
  // @@protoc_insertion_point(field_get:battlespheresproto_login.AccountInfo.acctname)
  return acctname_.GetNoArena();
}
void AccountInfo::set_acctname(const ::std::string& value) {
  
  acctname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battlespheresproto_login.AccountInfo.acctname)
}
#if LANG_CXX11
void AccountInfo::set_acctname(::std::string&& value) {
  
  acctname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battlespheresproto_login.AccountInfo.acctname)
}
#endif
void AccountInfo::set_acctname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  acctname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battlespheresproto_login.AccountInfo.acctname)
}
void AccountInfo::set_acctname(const void* value, size_t size) {
  
  acctname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battlespheresproto_login.AccountInfo.acctname)
}
::std::string* AccountInfo::mutable_acctname() {
  
  // @@protoc_insertion_point(field_mutable:battlespheresproto_login.AccountInfo.acctname)
  return acctname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountInfo::release_acctname() {
  // @@protoc_insertion_point(field_release:battlespheresproto_login.AccountInfo.acctname)
  
  return acctname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountInfo::set_allocated_acctname(::std::string* acctname) {
  if (acctname != NULL) {
    
  } else {
    
  }
  acctname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acctname);
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto_login.AccountInfo.acctname)
}

// bytes password = 2;
void AccountInfo::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccountInfo::password() const {
  // @@protoc_insertion_point(field_get:battlespheresproto_login.AccountInfo.password)
  return password_.GetNoArena();
}
void AccountInfo::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battlespheresproto_login.AccountInfo.password)
}
#if LANG_CXX11
void AccountInfo::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battlespheresproto_login.AccountInfo.password)
}
#endif
void AccountInfo::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battlespheresproto_login.AccountInfo.password)
}
void AccountInfo::set_password(const void* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battlespheresproto_login.AccountInfo.password)
}
::std::string* AccountInfo::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:battlespheresproto_login.AccountInfo.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountInfo::release_password() {
  // @@protoc_insertion_point(field_release:battlespheresproto_login.AccountInfo.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountInfo::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto_login.AccountInfo.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginKeyInfo::kResultFieldNumber;
const int LoginKeyInfo::kLoginaddrFieldNumber;
const int LoginKeyInfo::kLoginPortFieldNumber;
const int LoginKeyInfo::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginKeyInfo::LoginKeyInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_battlespheres_5flogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:battlespheresproto_login.LoginKeyInfo)
}
LoginKeyInfo::LoginKeyInfo(const LoginKeyInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  loginaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.loginaddr().size() > 0) {
    loginaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loginaddr_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&result_, &from.result_,
    reinterpret_cast<char*>(&loginport_) -
    reinterpret_cast<char*>(&result_) + sizeof(loginport_));
  // @@protoc_insertion_point(copy_constructor:battlespheresproto_login.LoginKeyInfo)
}

void LoginKeyInfo::SharedCtor() {
  loginaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, reinterpret_cast<char*>(&loginport_) -
    reinterpret_cast<char*>(&result_) + sizeof(loginport_));
  _cached_size_ = 0;
}

LoginKeyInfo::~LoginKeyInfo() {
  // @@protoc_insertion_point(destructor:battlespheresproto_login.LoginKeyInfo)
  SharedDtor();
}

void LoginKeyInfo::SharedDtor() {
  loginaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginKeyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginKeyInfo::descriptor() {
  protobuf_battlespheres_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_battlespheres_5flogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginKeyInfo& LoginKeyInfo::default_instance() {
  protobuf_battlespheres_5flogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginKeyInfo* LoginKeyInfo::New(::google::protobuf::Arena* arena) const {
  LoginKeyInfo* n = new LoginKeyInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginKeyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:battlespheresproto_login.LoginKeyInfo)
  loginaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, reinterpret_cast<char*>(&loginport_) -
    reinterpret_cast<char*>(&result_) + sizeof(loginport_));
}

bool LoginKeyInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:battlespheresproto_login.LoginKeyInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes loginaddr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_loginaddr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 loginPort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loginport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:battlespheresproto_login.LoginKeyInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:battlespheresproto_login.LoginKeyInfo)
  return false;
#undef DO_
}

void LoginKeyInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:battlespheresproto_login.LoginKeyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // bytes loginaddr = 2;
  if (this->loginaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->loginaddr(), output);
  }

  // int32 loginPort = 3;
  if (this->loginport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->loginport(), output);
  }

  // bytes token = 4;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:battlespheresproto_login.LoginKeyInfo)
}

::google::protobuf::uint8* LoginKeyInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:battlespheresproto_login.LoginKeyInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // bytes loginaddr = 2;
  if (this->loginaddr().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->loginaddr(), target);
  }

  // int32 loginPort = 3;
  if (this->loginport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->loginport(), target);
  }

  // bytes token = 4;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:battlespheresproto_login.LoginKeyInfo)
  return target;
}

size_t LoginKeyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:battlespheresproto_login.LoginKeyInfo)
  size_t total_size = 0;

  // bytes loginaddr = 2;
  if (this->loginaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->loginaddr());
  }

  // bytes token = 4;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // int32 loginPort = 3;
  if (this->loginport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loginport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginKeyInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:battlespheresproto_login.LoginKeyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginKeyInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginKeyInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:battlespheresproto_login.LoginKeyInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:battlespheresproto_login.LoginKeyInfo)
    MergeFrom(*source);
  }
}

void LoginKeyInfo::MergeFrom(const LoginKeyInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:battlespheresproto_login.LoginKeyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.loginaddr().size() > 0) {

    loginaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loginaddr_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.loginport() != 0) {
    set_loginport(from.loginport());
  }
}

void LoginKeyInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:battlespheresproto_login.LoginKeyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginKeyInfo::CopyFrom(const LoginKeyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battlespheresproto_login.LoginKeyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginKeyInfo::IsInitialized() const {
  return true;
}

void LoginKeyInfo::Swap(LoginKeyInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginKeyInfo::InternalSwap(LoginKeyInfo* other) {
  loginaddr_.Swap(&other->loginaddr_);
  token_.Swap(&other->token_);
  std::swap(result_, other->result_);
  std::swap(loginport_, other->loginport_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginKeyInfo::GetMetadata() const {
  protobuf_battlespheres_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_battlespheres_5flogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginKeyInfo

// int32 result = 1;
void LoginKeyInfo::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 LoginKeyInfo::result() const {
  // @@protoc_insertion_point(field_get:battlespheresproto_login.LoginKeyInfo.result)
  return result_;
}
void LoginKeyInfo::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto_login.LoginKeyInfo.result)
}

// bytes loginaddr = 2;
void LoginKeyInfo::clear_loginaddr() {
  loginaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginKeyInfo::loginaddr() const {
  // @@protoc_insertion_point(field_get:battlespheresproto_login.LoginKeyInfo.loginaddr)
  return loginaddr_.GetNoArena();
}
void LoginKeyInfo::set_loginaddr(const ::std::string& value) {
  
  loginaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battlespheresproto_login.LoginKeyInfo.loginaddr)
}
#if LANG_CXX11
void LoginKeyInfo::set_loginaddr(::std::string&& value) {
  
  loginaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battlespheresproto_login.LoginKeyInfo.loginaddr)
}
#endif
void LoginKeyInfo::set_loginaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  loginaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battlespheresproto_login.LoginKeyInfo.loginaddr)
}
void LoginKeyInfo::set_loginaddr(const void* value, size_t size) {
  
  loginaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battlespheresproto_login.LoginKeyInfo.loginaddr)
}
::std::string* LoginKeyInfo::mutable_loginaddr() {
  
  // @@protoc_insertion_point(field_mutable:battlespheresproto_login.LoginKeyInfo.loginaddr)
  return loginaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginKeyInfo::release_loginaddr() {
  // @@protoc_insertion_point(field_release:battlespheresproto_login.LoginKeyInfo.loginaddr)
  
  return loginaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginKeyInfo::set_allocated_loginaddr(::std::string* loginaddr) {
  if (loginaddr != NULL) {
    
  } else {
    
  }
  loginaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loginaddr);
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto_login.LoginKeyInfo.loginaddr)
}

// int32 loginPort = 3;
void LoginKeyInfo::clear_loginport() {
  loginport_ = 0;
}
::google::protobuf::int32 LoginKeyInfo::loginport() const {
  // @@protoc_insertion_point(field_get:battlespheresproto_login.LoginKeyInfo.loginPort)
  return loginport_;
}
void LoginKeyInfo::set_loginport(::google::protobuf::int32 value) {
  
  loginport_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto_login.LoginKeyInfo.loginPort)
}

// bytes token = 4;
void LoginKeyInfo::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginKeyInfo::token() const {
  // @@protoc_insertion_point(field_get:battlespheresproto_login.LoginKeyInfo.token)
  return token_.GetNoArena();
}
void LoginKeyInfo::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battlespheresproto_login.LoginKeyInfo.token)
}
#if LANG_CXX11
void LoginKeyInfo::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battlespheresproto_login.LoginKeyInfo.token)
}
#endif
void LoginKeyInfo::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battlespheresproto_login.LoginKeyInfo.token)
}
void LoginKeyInfo::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battlespheresproto_login.LoginKeyInfo.token)
}
::std::string* LoginKeyInfo::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:battlespheresproto_login.LoginKeyInfo.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginKeyInfo::release_token() {
  // @@protoc_insertion_point(field_release:battlespheresproto_login.LoginKeyInfo.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginKeyInfo::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto_login.LoginKeyInfo.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APPAccountInfo::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APPAccountInfo::APPAccountInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_battlespheres_5flogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:battlespheresproto_login.APPAccountInfo)
}
APPAccountInfo::APPAccountInfo(const APPAccountInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:battlespheresproto_login.APPAccountInfo)
}

void APPAccountInfo::SharedCtor() {
  appid_ = 0;
  _cached_size_ = 0;
}

APPAccountInfo::~APPAccountInfo() {
  // @@protoc_insertion_point(destructor:battlespheresproto_login.APPAccountInfo)
  SharedDtor();
}

void APPAccountInfo::SharedDtor() {
}

void APPAccountInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APPAccountInfo::descriptor() {
  protobuf_battlespheres_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_battlespheres_5flogin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const APPAccountInfo& APPAccountInfo::default_instance() {
  protobuf_battlespheres_5flogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

APPAccountInfo* APPAccountInfo::New(::google::protobuf::Arena* arena) const {
  APPAccountInfo* n = new APPAccountInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APPAccountInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:battlespheresproto_login.APPAccountInfo)
  appid_ = 0;
}

bool APPAccountInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:battlespheresproto_login.APPAccountInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:battlespheresproto_login.APPAccountInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:battlespheresproto_login.APPAccountInfo)
  return false;
#undef DO_
}

void APPAccountInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:battlespheresproto_login.APPAccountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 appid = 1;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->appid(), output);
  }

  // @@protoc_insertion_point(serialize_end:battlespheresproto_login.APPAccountInfo)
}

::google::protobuf::uint8* APPAccountInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:battlespheresproto_login.APPAccountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 appid = 1;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->appid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:battlespheresproto_login.APPAccountInfo)
  return target;
}

size_t APPAccountInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:battlespheresproto_login.APPAccountInfo)
  size_t total_size = 0;

  // int32 appid = 1;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APPAccountInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:battlespheresproto_login.APPAccountInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const APPAccountInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APPAccountInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:battlespheresproto_login.APPAccountInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:battlespheresproto_login.APPAccountInfo)
    MergeFrom(*source);
  }
}

void APPAccountInfo::MergeFrom(const APPAccountInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:battlespheresproto_login.APPAccountInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.appid() != 0) {
    set_appid(from.appid());
  }
}

void APPAccountInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:battlespheresproto_login.APPAccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APPAccountInfo::CopyFrom(const APPAccountInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:battlespheresproto_login.APPAccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APPAccountInfo::IsInitialized() const {
  return true;
}

void APPAccountInfo::Swap(APPAccountInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APPAccountInfo::InternalSwap(APPAccountInfo* other) {
  std::swap(appid_, other->appid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APPAccountInfo::GetMetadata() const {
  protobuf_battlespheres_5flogin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_battlespheres_5flogin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APPAccountInfo

// int32 appid = 1;
void APPAccountInfo::clear_appid() {
  appid_ = 0;
}
::google::protobuf::int32 APPAccountInfo::appid() const {
  // @@protoc_insertion_point(field_get:battlespheresproto_login.APPAccountInfo.appid)
  return appid_;
}
void APPAccountInfo::set_appid(::google::protobuf::int32 value) {
  
  appid_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto_login.APPAccountInfo.appid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace battlespheresproto_login

// @@protoc_insertion_point(global_scope)
