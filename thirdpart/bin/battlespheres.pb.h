// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: battlespheres.proto

#ifndef PROTOBUF_battlespheres_2eproto__INCLUDED
#define PROTOBUF_battlespheres_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace battlespheresproto {
class BattleResultReq;
class BattleResultReqDefaultTypeInternal;
extern BattleResultReqDefaultTypeInternal _BattleResultReq_default_instance_;
class BattleResultRsp;
class BattleResultRspDefaultTypeInternal;
extern BattleResultRspDefaultTypeInternal _BattleResultRsp_default_instance_;
class BuyBuffReq;
class BuyBuffReqDefaultTypeInternal;
extern BuyBuffReqDefaultTypeInternal _BuyBuffReq_default_instance_;
class BuyBuffRsp;
class BuyBuffRspDefaultTypeInternal;
extern BuyBuffRspDefaultTypeInternal _BuyBuffRsp_default_instance_;
class CreateRoleReq;
class CreateRoleReqDefaultTypeInternal;
extern CreateRoleReqDefaultTypeInternal _CreateRoleReq_default_instance_;
class CreateRoleRsp;
class CreateRoleRspDefaultTypeInternal;
extern CreateRoleRspDefaultTypeInternal _CreateRoleRsp_default_instance_;
class DismissRoomEvent;
class DismissRoomEventDefaultTypeInternal;
extern DismissRoomEventDefaultTypeInternal _DismissRoomEvent_default_instance_;
class FindFBReq;
class FindFBReqDefaultTypeInternal;
extern FindFBReqDefaultTypeInternal _FindFBReq_default_instance_;
class FindFBRsp;
class FindFBRspDefaultTypeInternal;
extern FindFBRspDefaultTypeInternal _FindFBRsp_default_instance_;
class GameUserInfo;
class GameUserInfoDefaultTypeInternal;
extern GameUserInfoDefaultTypeInternal _GameUserInfo_default_instance_;
class InvitationAnswerReq;
class InvitationAnswerReqDefaultTypeInternal;
extern InvitationAnswerReqDefaultTypeInternal _InvitationAnswerReq_default_instance_;
class InvitationAnswerRsp;
class InvitationAnswerRspDefaultTypeInternal;
extern InvitationAnswerRspDefaultTypeInternal _InvitationAnswerRsp_default_instance_;
class InvitationReq;
class InvitationReqDefaultTypeInternal;
extern InvitationReqDefaultTypeInternal _InvitationReq_default_instance_;
class InvitationRsp;
class InvitationRspDefaultTypeInternal;
extern InvitationRspDefaultTypeInternal _InvitationRsp_default_instance_;
class JoinRoomEvent;
class JoinRoomEventDefaultTypeInternal;
extern JoinRoomEventDefaultTypeInternal _JoinRoomEvent_default_instance_;
class JoinRoomReq;
class JoinRoomReqDefaultTypeInternal;
extern JoinRoomReqDefaultTypeInternal _JoinRoomReq_default_instance_;
class JoinRoomRsp;
class JoinRoomRspDefaultTypeInternal;
extern JoinRoomRspDefaultTypeInternal _JoinRoomRsp_default_instance_;
class LoadUserDataRsp;
class LoadUserDataRspDefaultTypeInternal;
extern LoadUserDataRspDefaultTypeInternal _LoadUserDataRsp_default_instance_;
class LoginReq;
class LoginReqDefaultTypeInternal;
extern LoginReqDefaultTypeInternal _LoginReq_default_instance_;
class LoginRsp;
class LoginRspDefaultTypeInternal;
extern LoginRspDefaultTypeInternal _LoginRsp_default_instance_;
class MissionInfo;
class MissionInfoDefaultTypeInternal;
extern MissionInfoDefaultTypeInternal _MissionInfo_default_instance_;
class MissionInfos;
class MissionInfosDefaultTypeInternal;
extern MissionInfosDefaultTypeInternal _MissionInfos_default_instance_;
class MissionProgressInfo;
class MissionProgressInfoDefaultTypeInternal;
extern MissionProgressInfoDefaultTypeInternal _MissionProgressInfo_default_instance_;
class PlayerStatus;
class PlayerStatusDefaultTypeInternal;
extern PlayerStatusDefaultTypeInternal _PlayerStatus_default_instance_;
class QuitRoomEvent;
class QuitRoomEventDefaultTypeInternal;
extern QuitRoomEventDefaultTypeInternal _QuitRoomEvent_default_instance_;
class QuitRoomReq;
class QuitRoomReqDefaultTypeInternal;
extern QuitRoomReqDefaultTypeInternal _QuitRoomReq_default_instance_;
class QuitRoomRsp;
class QuitRoomRspDefaultTypeInternal;
extern QuitRoomRspDefaultTypeInternal _QuitRoomRsp_default_instance_;
class RoomPlayerInfo;
class RoomPlayerInfoDefaultTypeInternal;
extern RoomPlayerInfoDefaultTypeInternal _RoomPlayerInfo_default_instance_;
class SkillInfo;
class SkillInfoDefaultTypeInternal;
extern SkillInfoDefaultTypeInternal _SkillInfo_default_instance_;
class SkillInfos;
class SkillInfosDefaultTypeInternal;
extern SkillInfosDefaultTypeInternal _SkillInfos_default_instance_;
class SkillUpgradeReq;
class SkillUpgradeReqDefaultTypeInternal;
extern SkillUpgradeReqDefaultTypeInternal _SkillUpgradeReq_default_instance_;
class SkillUpgradeRsp;
class SkillUpgradeRspDefaultTypeInternal;
extern SkillUpgradeRspDefaultTypeInternal _SkillUpgradeRsp_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class WeaponBuyReq;
class WeaponBuyReqDefaultTypeInternal;
extern WeaponBuyReqDefaultTypeInternal _WeaponBuyReq_default_instance_;
class WeaponBuyRsp;
class WeaponBuyRspDefaultTypeInternal;
extern WeaponBuyRspDefaultTypeInternal _WeaponBuyRsp_default_instance_;
class WeaponEquipInfo;
class WeaponEquipInfoDefaultTypeInternal;
extern WeaponEquipInfoDefaultTypeInternal _WeaponEquipInfo_default_instance_;
class WeaponEquipReq;
class WeaponEquipReqDefaultTypeInternal;
extern WeaponEquipReqDefaultTypeInternal _WeaponEquipReq_default_instance_;
class WeaponEquipRsp;
class WeaponEquipRspDefaultTypeInternal;
extern WeaponEquipRspDefaultTypeInternal _WeaponEquipRsp_default_instance_;
class WeaponInfo;
class WeaponInfoDefaultTypeInternal;
extern WeaponInfoDefaultTypeInternal _WeaponInfo_default_instance_;
class WeaponInfos;
class WeaponInfosDefaultTypeInternal;
extern WeaponInfosDefaultTypeInternal _WeaponInfos_default_instance_;
class WeaponProperty;
class WeaponPropertyDefaultTypeInternal;
extern WeaponPropertyDefaultTypeInternal _WeaponProperty_default_instance_;
}  // namespace battlespheresproto

namespace battlespheresproto {

namespace protobuf_battlespheres_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_battlespheres_2eproto

enum msgId {
  unused = 0,
  cmdLoginReq = 100,
  cmdLoginRsp = 101,
  cmdCreateRoleReq = 102,
  cmdCreateRoleRsp = 103,
  cmdLoadUserDataReq = 104,
  cmdLoadUserDataRsp = 105,
  cmdJoinRoomReq = 112,
  cmdJoinRoomRsp = 113,
  cmdQuitRoomReq = 114,
  cmdQuitRoomRsp = 115,
  cmdJoinRoomEvent = 116,
  cmdQuitRoomEvent = 117,
  cmdDismissRoomEvent = 118,
  cmdBuyBuffReq = 119,
  cmdBuyBuffRsp = 120,
  cmdWeaponBuyReq = 121,
  cmdWeaponBuyRsp = 122,
  cmdWeaponEquipReq = 123,
  cmdWeaponEquipRsp = 124,
  cmdSkillUpgradeReq = 125,
  cmdSkillUpgradeRsp = 126,
  cmdFindFBReq = 300,
  cmdFindFBRsp = 301,
  cmdInvitationReq = 302,
  cmdInvitationRsp = 203,
  cmdInvitationAnswerReq = 304,
  cmdInvitationAnswerRsp = 305,
  cmdBattleResultReq = 206,
  cmdBattleResultRsp = 207,
  cmdPlayerStatus = 906,
  msgId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  msgId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool msgId_IsValid(int value);
const msgId msgId_MIN = unused;
const msgId msgId_MAX = cmdPlayerStatus;
const int msgId_ARRAYSIZE = msgId_MAX + 1;

const ::google::protobuf::EnumDescriptor* msgId_descriptor();
inline const ::std::string& msgId_Name(msgId value) {
  return ::google::protobuf::internal::NameOfEnum(
    msgId_descriptor(), value);
}
inline bool msgId_Parse(
    const ::std::string& name, msgId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<msgId>(
    msgId_descriptor(), name, value);
}
enum error_code {
  success = 0,
  server_is_busy = 1,
  need_to_create_a_role = 2,
  account_already_exists = 100,
  account_or_password_error = 101,
  token_verify_error = 102,
  token_verify_expired = 103,
  role_id_non_existed = 200,
  nick_name_too_long = 201,
  nick_name_existing_keyword = 202,
  nick_name_non_existed = 203,
  player_info_invalid = 300,
  weapon_id_non_exists = 301,
  money_non_enough = 302,
  weapon_already_have = 303,
  weapon_non_have = 304,
  skill_already_have = 305,
  skill_idLevel_non_existed = 306,
  fb_id_non_exist = 307,
  user_non_online = 308,
  invitation_refuse = 309,
  player_non_mission = 311,
  player_in_mission = 312,
  missionConfig_non_have = 323,
  mission_progress_expire = 324,
  mission_expire = 325,
  player_non_have_mission = 326,
  join_room_fail = 327,
  error_code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  error_code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool error_code_IsValid(int value);
const error_code error_code_MIN = success;
const error_code error_code_MAX = join_room_fail;
const int error_code_ARRAYSIZE = error_code_MAX + 1;

const ::google::protobuf::EnumDescriptor* error_code_descriptor();
inline const ::std::string& error_code_Name(error_code value) {
  return ::google::protobuf::internal::NameOfEnum(
    error_code_descriptor(), value);
}
inline bool error_code_Parse(
    const ::std::string& name, error_code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<error_code>(
    error_code_descriptor(), name, value);
}
// ===================================================================

class SkillInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.SkillInfo) */ {
 public:
  SkillInfo();
  virtual ~SkillInfo();

  SkillInfo(const SkillInfo& from);

  inline SkillInfo& operator=(const SkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillInfo& default_instance();

  static inline const SkillInfo* internal_default_instance() {
    return reinterpret_cast<const SkillInfo*>(
               &_SkillInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SkillInfo* other);

  // implements Message ----------------------------------------------

  inline SkillInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SkillInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SkillInfo& from);
  void MergeFrom(const SkillInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SkillInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.SkillInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 level_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WeaponProperty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.WeaponProperty) */ {
 public:
  WeaponProperty();
  virtual ~WeaponProperty();

  WeaponProperty(const WeaponProperty& from);

  inline WeaponProperty& operator=(const WeaponProperty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeaponProperty& default_instance();

  static inline const WeaponProperty* internal_default_instance() {
    return reinterpret_cast<const WeaponProperty*>(
               &_WeaponProperty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(WeaponProperty* other);

  // implements Message ----------------------------------------------

  inline WeaponProperty* New() const PROTOBUF_FINAL { return New(NULL); }

  WeaponProperty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeaponProperty& from);
  void MergeFrom(const WeaponProperty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeaponProperty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // float value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.WeaponProperty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  float value_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WeaponInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.WeaponInfo) */ {
 public:
  WeaponInfo();
  virtual ~WeaponInfo();

  WeaponInfo(const WeaponInfo& from);

  inline WeaponInfo& operator=(const WeaponInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeaponInfo& default_instance();

  static inline const WeaponInfo* internal_default_instance() {
    return reinterpret_cast<const WeaponInfo*>(
               &_WeaponInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(WeaponInfo* other);

  // implements Message ----------------------------------------------

  inline WeaponInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WeaponInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeaponInfo& from);
  void MergeFrom(const WeaponInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeaponInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .battlespheresproto.WeaponProperty weapon_properties = 3;
  int weapon_properties_size() const;
  void clear_weapon_properties();
  static const int kWeaponPropertiesFieldNumber = 3;
  const ::battlespheresproto::WeaponProperty& weapon_properties(int index) const;
  ::battlespheresproto::WeaponProperty* mutable_weapon_properties(int index);
  ::battlespheresproto::WeaponProperty* add_weapon_properties();
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponProperty >*
      mutable_weapon_properties();
  const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponProperty >&
      weapon_properties() const;

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.WeaponInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponProperty > weapon_properties_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 index_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MissionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.MissionInfo) */ {
 public:
  MissionInfo();
  virtual ~MissionInfo();

  MissionInfo(const MissionInfo& from);

  inline MissionInfo& operator=(const MissionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MissionInfo& default_instance();

  static inline const MissionInfo* internal_default_instance() {
    return reinterpret_cast<const MissionInfo*>(
               &_MissionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MissionInfo* other);

  // implements Message ----------------------------------------------

  inline MissionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MissionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MissionInfo& from);
  void MergeFrom(const MissionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MissionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 receivedTime = 2;
  void clear_receivedtime();
  static const int kReceivedTimeFieldNumber = 2;
  ::google::protobuf::int32 receivedtime() const;
  void set_receivedtime(::google::protobuf::int32 value);

  // int32 postion = 3;
  void clear_postion();
  static const int kPostionFieldNumber = 3;
  ::google::protobuf::int32 postion() const;
  void set_postion(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.MissionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 receivedtime_;
  ::google::protobuf::int32 postion_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MissionProgressInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.MissionProgressInfo) */ {
 public:
  MissionProgressInfo();
  virtual ~MissionProgressInfo();

  MissionProgressInfo(const MissionProgressInfo& from);

  inline MissionProgressInfo& operator=(const MissionProgressInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MissionProgressInfo& default_instance();

  static inline const MissionProgressInfo* internal_default_instance() {
    return reinterpret_cast<const MissionProgressInfo*>(
               &_MissionProgressInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MissionProgressInfo* other);

  // implements Message ----------------------------------------------

  inline MissionProgressInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MissionProgressInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MissionProgressInfo& from);
  void MergeFrom(const MissionProgressInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MissionProgressInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 missionType = 1;
  void clear_missiontype();
  static const int kMissionTypeFieldNumber = 1;
  ::google::protobuf::int32 missiontype() const;
  void set_missiontype(::google::protobuf::int32 value);

  // int32 progress = 2;
  void clear_progress();
  static const int kProgressFieldNumber = 2;
  ::google::protobuf::int32 progress() const;
  void set_progress(::google::protobuf::int32 value);

  // int32 expireTime = 3;
  void clear_expiretime();
  static const int kExpireTimeFieldNumber = 3;
  ::google::protobuf::int32 expiretime() const;
  void set_expiretime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.MissionProgressInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 missiontype_;
  ::google::protobuf::int32 progress_;
  ::google::protobuf::int32 expiretime_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameUserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.GameUserInfo) */ {
 public:
  GameUserInfo();
  virtual ~GameUserInfo();

  GameUserInfo(const GameUserInfo& from);

  inline GameUserInfo& operator=(const GameUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameUserInfo& default_instance();

  static inline const GameUserInfo* internal_default_instance() {
    return reinterpret_cast<const GameUserInfo*>(
               &_GameUserInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GameUserInfo* other);

  // implements Message ----------------------------------------------

  inline GameUserInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GameUserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameUserInfo& from);
  void MergeFrom(const GameUserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameUserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const void* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // bytes strSkillInfos = 21;
  void clear_strskillinfos();
  static const int kStrSkillInfosFieldNumber = 21;
  const ::std::string& strskillinfos() const;
  void set_strskillinfos(const ::std::string& value);
  #if LANG_CXX11
  void set_strskillinfos(::std::string&& value);
  #endif
  void set_strskillinfos(const char* value);
  void set_strskillinfos(const void* value, size_t size);
  ::std::string* mutable_strskillinfos();
  ::std::string* release_strskillinfos();
  void set_allocated_strskillinfos(::std::string* strskillinfos);

  // bytes strWeaponInfos = 22;
  void clear_strweaponinfos();
  static const int kStrWeaponInfosFieldNumber = 22;
  const ::std::string& strweaponinfos() const;
  void set_strweaponinfos(const ::std::string& value);
  #if LANG_CXX11
  void set_strweaponinfos(::std::string&& value);
  #endif
  void set_strweaponinfos(const char* value);
  void set_strweaponinfos(const void* value, size_t size);
  ::std::string* mutable_strweaponinfos();
  ::std::string* release_strweaponinfos();
  void set_allocated_strweaponinfos(::std::string* strweaponinfos);

  // bytes strprogress = 23;
  void clear_strprogress();
  static const int kStrprogressFieldNumber = 23;
  const ::std::string& strprogress() const;
  void set_strprogress(const ::std::string& value);
  #if LANG_CXX11
  void set_strprogress(::std::string&& value);
  #endif
  void set_strprogress(const char* value);
  void set_strprogress(const void* value, size_t size);
  ::std::string* mutable_strprogress();
  ::std::string* release_strprogress();
  void set_allocated_strprogress(::std::string* strprogress);

  // bytes strMissionInfos = 24;
  void clear_strmissioninfos();
  static const int kStrMissionInfosFieldNumber = 24;
  const ::std::string& strmissioninfos() const;
  void set_strmissioninfos(const ::std::string& value);
  #if LANG_CXX11
  void set_strmissioninfos(::std::string&& value);
  #endif
  void set_strmissioninfos(const char* value);
  void set_strmissioninfos(const void* value, size_t size);
  ::std::string* mutable_strmissioninfos();
  ::std::string* release_strmissioninfos();
  void set_allocated_strmissioninfos(::std::string* strmissioninfos);

  // int32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // int32 role_id = 3;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  ::google::protobuf::int32 role_id() const;
  void set_role_id(::google::protobuf::int32 value);

  // int32 rank = 4;
  void clear_rank();
  static const int kRankFieldNumber = 4;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // int32 coin = 5;
  void clear_coin();
  static const int kCoinFieldNumber = 5;
  ::google::protobuf::int32 coin() const;
  void set_coin(::google::protobuf::int32 value);

  // int32 exp = 6;
  void clear_exp();
  static const int kExpFieldNumber = 6;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // int32 level = 7;
  void clear_level();
  static const int kLevelFieldNumber = 7;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.GameUserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr strskillinfos_;
  ::google::protobuf::internal::ArenaStringPtr strweaponinfos_;
  ::google::protobuf::internal::ArenaStringPtr strprogress_;
  ::google::protobuf::internal::ArenaStringPtr strmissioninfos_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 coin_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 level_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WeaponInfos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.WeaponInfos) */ {
 public:
  WeaponInfos();
  virtual ~WeaponInfos();

  WeaponInfos(const WeaponInfos& from);

  inline WeaponInfos& operator=(const WeaponInfos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeaponInfos& default_instance();

  static inline const WeaponInfos* internal_default_instance() {
    return reinterpret_cast<const WeaponInfos*>(
               &_WeaponInfos_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(WeaponInfos* other);

  // implements Message ----------------------------------------------

  inline WeaponInfos* New() const PROTOBUF_FINAL { return New(NULL); }

  WeaponInfos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeaponInfos& from);
  void MergeFrom(const WeaponInfos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeaponInfos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .battlespheresproto.WeaponInfo weapon_infos = 1;
  int weapon_infos_size() const;
  void clear_weapon_infos();
  static const int kWeaponInfosFieldNumber = 1;
  const ::battlespheresproto::WeaponInfo& weapon_infos(int index) const;
  ::battlespheresproto::WeaponInfo* mutable_weapon_infos(int index);
  ::battlespheresproto::WeaponInfo* add_weapon_infos();
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >*
      mutable_weapon_infos();
  const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >&
      weapon_infos() const;

  // @@protoc_insertion_point(class_scope:battlespheresproto.WeaponInfos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo > weapon_infos_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SkillInfos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.SkillInfos) */ {
 public:
  SkillInfos();
  virtual ~SkillInfos();

  SkillInfos(const SkillInfos& from);

  inline SkillInfos& operator=(const SkillInfos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillInfos& default_instance();

  static inline const SkillInfos* internal_default_instance() {
    return reinterpret_cast<const SkillInfos*>(
               &_SkillInfos_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SkillInfos* other);

  // implements Message ----------------------------------------------

  inline SkillInfos* New() const PROTOBUF_FINAL { return New(NULL); }

  SkillInfos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SkillInfos& from);
  void MergeFrom(const SkillInfos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SkillInfos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .battlespheresproto.SkillInfo skill_infos = 1;
  int skill_infos_size() const;
  void clear_skill_infos();
  static const int kSkillInfosFieldNumber = 1;
  const ::battlespheresproto::SkillInfo& skill_infos(int index) const;
  ::battlespheresproto::SkillInfo* mutable_skill_infos(int index);
  ::battlespheresproto::SkillInfo* add_skill_infos();
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::SkillInfo >*
      mutable_skill_infos();
  const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::SkillInfo >&
      skill_infos() const;

  // @@protoc_insertion_point(class_scope:battlespheresproto.SkillInfos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::SkillInfo > skill_infos_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MissionInfos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.MissionInfos) */ {
 public:
  MissionInfos();
  virtual ~MissionInfos();

  MissionInfos(const MissionInfos& from);

  inline MissionInfos& operator=(const MissionInfos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MissionInfos& default_instance();

  static inline const MissionInfos* internal_default_instance() {
    return reinterpret_cast<const MissionInfos*>(
               &_MissionInfos_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(MissionInfos* other);

  // implements Message ----------------------------------------------

  inline MissionInfos* New() const PROTOBUF_FINAL { return New(NULL); }

  MissionInfos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MissionInfos& from);
  void MergeFrom(const MissionInfos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MissionInfos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .battlespheresproto.MissionInfo mission_infos = 1;
  int mission_infos_size() const;
  void clear_mission_infos();
  static const int kMissionInfosFieldNumber = 1;
  const ::battlespheresproto::MissionInfo& mission_infos(int index) const;
  ::battlespheresproto::MissionInfo* mutable_mission_infos(int index);
  ::battlespheresproto::MissionInfo* add_mission_infos();
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::MissionInfo >*
      mutable_mission_infos();
  const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::MissionInfo >&
      mission_infos() const;

  // @@protoc_insertion_point(class_scope:battlespheresproto.MissionInfos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::MissionInfo > mission_infos_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.UserInfo) */ {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
               &_UserInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(UserInfo* other);

  // implements Message ----------------------------------------------

  inline UserInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .battlespheresproto.SkillInfo skill_infos = 21;
  int skill_infos_size() const;
  void clear_skill_infos();
  static const int kSkillInfosFieldNumber = 21;
  const ::battlespheresproto::SkillInfo& skill_infos(int index) const;
  ::battlespheresproto::SkillInfo* mutable_skill_infos(int index);
  ::battlespheresproto::SkillInfo* add_skill_infos();
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::SkillInfo >*
      mutable_skill_infos();
  const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::SkillInfo >&
      skill_infos() const;

  // repeated .battlespheresproto.WeaponInfo weapon_infos = 22;
  int weapon_infos_size() const;
  void clear_weapon_infos();
  static const int kWeaponInfosFieldNumber = 22;
  const ::battlespheresproto::WeaponInfo& weapon_infos(int index) const;
  ::battlespheresproto::WeaponInfo* mutable_weapon_infos(int index);
  ::battlespheresproto::WeaponInfo* add_weapon_infos();
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >*
      mutable_weapon_infos();
  const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >&
      weapon_infos() const;

  // repeated .battlespheresproto.MissionInfo mission_infos = 32;
  int mission_infos_size() const;
  void clear_mission_infos();
  static const int kMissionInfosFieldNumber = 32;
  const ::battlespheresproto::MissionInfo& mission_infos(int index) const;
  ::battlespheresproto::MissionInfo* mutable_mission_infos(int index);
  ::battlespheresproto::MissionInfo* add_mission_infos();
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::MissionInfo >*
      mutable_mission_infos();
  const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::MissionInfo >&
      mission_infos() const;

  // bytes nickname = 3;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const void* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // .battlespheresproto.MissionProgressInfo mission_progress_info = 31;
  bool has_mission_progress_info() const;
  void clear_mission_progress_info();
  static const int kMissionProgressInfoFieldNumber = 31;
  const ::battlespheresproto::MissionProgressInfo& mission_progress_info() const;
  ::battlespheresproto::MissionProgressInfo* mutable_mission_progress_info();
  ::battlespheresproto::MissionProgressInfo* release_mission_progress_info();
  void set_allocated_mission_progress_info(::battlespheresproto::MissionProgressInfo* mission_progress_info);

  // int32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // int32 role_id = 4;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 4;
  ::google::protobuf::int32 role_id() const;
  void set_role_id(::google::protobuf::int32 value);

  // int32 exp = 19;
  void clear_exp();
  static const int kExpFieldNumber = 19;
  ::google::protobuf::int32 exp() const;
  void set_exp(::google::protobuf::int32 value);

  // int32 rank = 17;
  void clear_rank();
  static const int kRankFieldNumber = 17;
  ::google::protobuf::int32 rank() const;
  void set_rank(::google::protobuf::int32 value);

  // int32 coin = 18;
  void clear_coin();
  static const int kCoinFieldNumber = 18;
  ::google::protobuf::int32 coin() const;
  void set_coin(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.UserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::SkillInfo > skill_infos_;
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo > weapon_infos_;
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::MissionInfo > mission_infos_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::battlespheresproto::MissionProgressInfo* mission_progress_info_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 coin_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.LoginReq) */ {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq& default_instance();

  static inline const LoginReq* internal_default_instance() {
    return reinterpret_cast<const LoginReq*>(
               &_LoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(LoginReq* other);

  // implements Message ----------------------------------------------

  inline LoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:battlespheresproto.LoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.LoginRsp) */ {
 public:
  LoginRsp();
  virtual ~LoginRsp();

  LoginRsp(const LoginRsp& from);

  inline LoginRsp& operator=(const LoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRsp& default_instance();

  static inline const LoginRsp* internal_default_instance() {
    return reinterpret_cast<const LoginRsp*>(
               &_LoginRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(LoginRsp* other);

  // implements Message ----------------------------------------------

  inline LoginRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRsp& from);
  void MergeFrom(const LoginRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int32 timestamp() const;
  void set_timestamp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.LoginRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateRoleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.CreateRoleReq) */ {
 public:
  CreateRoleReq();
  virtual ~CreateRoleReq();

  CreateRoleReq(const CreateRoleReq& from);

  inline CreateRoleReq& operator=(const CreateRoleReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoleReq& default_instance();

  static inline const CreateRoleReq* internal_default_instance() {
    return reinterpret_cast<const CreateRoleReq*>(
               &_CreateRoleReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CreateRoleReq* other);

  // implements Message ----------------------------------------------

  inline CreateRoleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRoleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRoleReq& from);
  void MergeFrom(const CreateRoleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRoleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const void* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // int32 roleId = 1;
  void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.CreateRoleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 roleid_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateRoleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.CreateRoleRsp) */ {
 public:
  CreateRoleRsp();
  virtual ~CreateRoleRsp();

  CreateRoleRsp(const CreateRoleRsp& from);

  inline CreateRoleRsp& operator=(const CreateRoleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoleRsp& default_instance();

  static inline const CreateRoleRsp* internal_default_instance() {
    return reinterpret_cast<const CreateRoleRsp*>(
               &_CreateRoleRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CreateRoleRsp* other);

  // implements Message ----------------------------------------------

  inline CreateRoleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRoleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRoleRsp& from);
  void MergeFrom(const CreateRoleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRoleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.CreateRoleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoadUserDataRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.LoadUserDataRsp) */ {
 public:
  LoadUserDataRsp();
  virtual ~LoadUserDataRsp();

  LoadUserDataRsp(const LoadUserDataRsp& from);

  inline LoadUserDataRsp& operator=(const LoadUserDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadUserDataRsp& default_instance();

  static inline const LoadUserDataRsp* internal_default_instance() {
    return reinterpret_cast<const LoadUserDataRsp*>(
               &_LoadUserDataRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(LoadUserDataRsp* other);

  // implements Message ----------------------------------------------

  inline LoadUserDataRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  LoadUserDataRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoadUserDataRsp& from);
  void MergeFrom(const LoadUserDataRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoadUserDataRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .battlespheresproto.UserInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::battlespheresproto::UserInfo& info() const;
  ::battlespheresproto::UserInfo* mutable_info();
  ::battlespheresproto::UserInfo* release_info();
  void set_allocated_info(::battlespheresproto::UserInfo* info);

  // @@protoc_insertion_point(class_scope:battlespheresproto.LoadUserDataRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::battlespheresproto::UserInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.PlayerStatus) */ {
 public:
  PlayerStatus();
  virtual ~PlayerStatus();

  PlayerStatus(const PlayerStatus& from);

  inline PlayerStatus& operator=(const PlayerStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerStatus& default_instance();

  static inline const PlayerStatus* internal_default_instance() {
    return reinterpret_cast<const PlayerStatus*>(
               &_PlayerStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(PlayerStatus* other);

  // implements Message ----------------------------------------------

  inline PlayerStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerStatus& from);
  void MergeFrom(const PlayerStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // bool isOnline = 2;
  void clear_isonline();
  static const int kIsOnlineFieldNumber = 2;
  bool isonline() const;
  void set_isonline(bool value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.PlayerStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  bool isonline_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomPlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.RoomPlayerInfo) */ {
 public:
  RoomPlayerInfo();
  virtual ~RoomPlayerInfo();

  RoomPlayerInfo(const RoomPlayerInfo& from);

  inline RoomPlayerInfo& operator=(const RoomPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPlayerInfo& default_instance();

  static inline const RoomPlayerInfo* internal_default_instance() {
    return reinterpret_cast<const RoomPlayerInfo*>(
               &_RoomPlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(RoomPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline RoomPlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomPlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomPlayerInfo& from);
  void MergeFrom(const RoomPlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .battlespheresproto.WeaponInfo weapon_infos = 4;
  int weapon_infos_size() const;
  void clear_weapon_infos();
  static const int kWeaponInfosFieldNumber = 4;
  const ::battlespheresproto::WeaponInfo& weapon_infos(int index) const;
  ::battlespheresproto::WeaponInfo* mutable_weapon_infos(int index);
  ::battlespheresproto::WeaponInfo* add_weapon_infos();
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >*
      mutable_weapon_infos();
  const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >&
      weapon_infos() const;

  // bytes nickname = 3;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const void* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // int32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.RoomPlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo > weapon_infos_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int32 user_id_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DismissRoomEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.DismissRoomEvent) */ {
 public:
  DismissRoomEvent();
  virtual ~DismissRoomEvent();

  DismissRoomEvent(const DismissRoomEvent& from);

  inline DismissRoomEvent& operator=(const DismissRoomEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DismissRoomEvent& default_instance();

  static inline const DismissRoomEvent* internal_default_instance() {
    return reinterpret_cast<const DismissRoomEvent*>(
               &_DismissRoomEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(DismissRoomEvent* other);

  // implements Message ----------------------------------------------

  inline DismissRoomEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  DismissRoomEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DismissRoomEvent& from);
  void MergeFrom(const DismissRoomEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DismissRoomEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 reason = 1;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::google::protobuf::int32 reason() const;
  void set_reason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.DismissRoomEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 reason_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.JoinRoomReq) */ {
 public:
  JoinRoomReq();
  virtual ~JoinRoomReq();

  JoinRoomReq(const JoinRoomReq& from);

  inline JoinRoomReq& operator=(const JoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomReq& default_instance();

  static inline const JoinRoomReq* internal_default_instance() {
    return reinterpret_cast<const JoinRoomReq*>(
               &_JoinRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(JoinRoomReq* other);

  // implements Message ----------------------------------------------

  inline JoinRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinRoomReq& from);
  void MergeFrom(const JoinRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .battlespheresproto.WeaponInfo weapon_infos = 5;
  int weapon_infos_size() const;
  void clear_weapon_infos();
  static const int kWeaponInfosFieldNumber = 5;
  const ::battlespheresproto::WeaponInfo& weapon_infos(int index) const;
  ::battlespheresproto::WeaponInfo* mutable_weapon_infos(int index);
  ::battlespheresproto::WeaponInfo* add_weapon_infos();
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >*
      mutable_weapon_infos();
  const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >&
      weapon_infos() const;

  // int32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // int32 level_id = 2;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 2;
  ::google::protobuf::int32 level_id() const;
  void set_level_id(::google::protobuf::int32 value);

  // int32 mode = 3;
  void clear_mode();
  static const int kModeFieldNumber = 3;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // bool private = 4;
  void clear_private_();
  static const int kPrivateFieldNumber = 4;
  bool private_() const;
  void set_private_(bool value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.JoinRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo > weapon_infos_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 level_id_;
  ::google::protobuf::int32 mode_;
  bool private__;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinRoomRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.JoinRoomRsp) */ {
 public:
  JoinRoomRsp();
  virtual ~JoinRoomRsp();

  JoinRoomRsp(const JoinRoomRsp& from);

  inline JoinRoomRsp& operator=(const JoinRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomRsp& default_instance();

  static inline const JoinRoomRsp* internal_default_instance() {
    return reinterpret_cast<const JoinRoomRsp*>(
               &_JoinRoomRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(JoinRoomRsp* other);

  // implements Message ----------------------------------------------

  inline JoinRoomRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinRoomRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinRoomRsp& from);
  void MergeFrom(const JoinRoomRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinRoomRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .battlespheresproto.RoomPlayerInfo other_players = 5;
  int other_players_size() const;
  void clear_other_players();
  static const int kOtherPlayersFieldNumber = 5;
  const ::battlespheresproto::RoomPlayerInfo& other_players(int index) const;
  ::battlespheresproto::RoomPlayerInfo* mutable_other_players(int index);
  ::battlespheresproto::RoomPlayerInfo* add_other_players();
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::RoomPlayerInfo >*
      mutable_other_players();
  const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::RoomPlayerInfo >&
      other_players() const;

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 room_id = 2;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // int32 level_id = 3;
  void clear_level_id();
  static const int kLevelIdFieldNumber = 3;
  ::google::protobuf::int32 level_id() const;
  void set_level_id(::google::protobuf::int32 value);

  // int32 owner_id = 4;
  void clear_owner_id();
  static const int kOwnerIdFieldNumber = 4;
  ::google::protobuf::int32 owner_id() const;
  void set_owner_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.JoinRoomRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::RoomPlayerInfo > other_players_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 level_id_;
  ::google::protobuf::int32 owner_id_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinRoomEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.JoinRoomEvent) */ {
 public:
  JoinRoomEvent();
  virtual ~JoinRoomEvent();

  JoinRoomEvent(const JoinRoomEvent& from);

  inline JoinRoomEvent& operator=(const JoinRoomEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomEvent& default_instance();

  static inline const JoinRoomEvent* internal_default_instance() {
    return reinterpret_cast<const JoinRoomEvent*>(
               &_JoinRoomEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(JoinRoomEvent* other);

  // implements Message ----------------------------------------------

  inline JoinRoomEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinRoomEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinRoomEvent& from);
  void MergeFrom(const JoinRoomEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinRoomEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .battlespheresproto.RoomPlayerInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::battlespheresproto::RoomPlayerInfo& info() const;
  ::battlespheresproto::RoomPlayerInfo* mutable_info();
  ::battlespheresproto::RoomPlayerInfo* release_info();
  void set_allocated_info(::battlespheresproto::RoomPlayerInfo* info);

  // @@protoc_insertion_point(class_scope:battlespheresproto.JoinRoomEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::battlespheresproto::RoomPlayerInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuitRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.QuitRoomReq) */ {
 public:
  QuitRoomReq();
  virtual ~QuitRoomReq();

  QuitRoomReq(const QuitRoomReq& from);

  inline QuitRoomReq& operator=(const QuitRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuitRoomReq& default_instance();

  static inline const QuitRoomReq* internal_default_instance() {
    return reinterpret_cast<const QuitRoomReq*>(
               &_QuitRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(QuitRoomReq* other);

  // implements Message ----------------------------------------------

  inline QuitRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QuitRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuitRoomReq& from);
  void MergeFrom(const QuitRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuitRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 room_id = 1;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::int32 room_id() const;
  void set_room_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.QuitRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 room_id_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuitRoomRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.QuitRoomRsp) */ {
 public:
  QuitRoomRsp();
  virtual ~QuitRoomRsp();

  QuitRoomRsp(const QuitRoomRsp& from);

  inline QuitRoomRsp& operator=(const QuitRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuitRoomRsp& default_instance();

  static inline const QuitRoomRsp* internal_default_instance() {
    return reinterpret_cast<const QuitRoomRsp*>(
               &_QuitRoomRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(QuitRoomRsp* other);

  // implements Message ----------------------------------------------

  inline QuitRoomRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QuitRoomRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuitRoomRsp& from);
  void MergeFrom(const QuitRoomRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuitRoomRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.QuitRoomRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuitRoomEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.QuitRoomEvent) */ {
 public:
  QuitRoomEvent();
  virtual ~QuitRoomEvent();

  QuitRoomEvent(const QuitRoomEvent& from);

  inline QuitRoomEvent& operator=(const QuitRoomEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuitRoomEvent& default_instance();

  static inline const QuitRoomEvent* internal_default_instance() {
    return reinterpret_cast<const QuitRoomEvent*>(
               &_QuitRoomEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(QuitRoomEvent* other);

  // implements Message ----------------------------------------------

  inline QuitRoomEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  QuitRoomEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuitRoomEvent& from);
  void MergeFrom(const QuitRoomEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuitRoomEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.QuitRoomEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 user_id_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BuyBuffReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.BuyBuffReq) */ {
 public:
  BuyBuffReq();
  virtual ~BuyBuffReq();

  BuyBuffReq(const BuyBuffReq& from);

  inline BuyBuffReq& operator=(const BuyBuffReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyBuffReq& default_instance();

  static inline const BuyBuffReq* internal_default_instance() {
    return reinterpret_cast<const BuyBuffReq*>(
               &_BuyBuffReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(BuyBuffReq* other);

  // implements Message ----------------------------------------------

  inline BuyBuffReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BuyBuffReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuyBuffReq& from);
  void MergeFrom(const BuyBuffReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuyBuffReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 buff_id = 1;
  void clear_buff_id();
  static const int kBuffIdFieldNumber = 1;
  ::google::protobuf::int32 buff_id() const;
  void set_buff_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.BuyBuffReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 buff_id_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BuyBuffRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.BuyBuffRsp) */ {
 public:
  BuyBuffRsp();
  virtual ~BuyBuffRsp();

  BuyBuffRsp(const BuyBuffRsp& from);

  inline BuyBuffRsp& operator=(const BuyBuffRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyBuffRsp& default_instance();

  static inline const BuyBuffRsp* internal_default_instance() {
    return reinterpret_cast<const BuyBuffRsp*>(
               &_BuyBuffRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(BuyBuffRsp* other);

  // implements Message ----------------------------------------------

  inline BuyBuffRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BuyBuffRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BuyBuffRsp& from);
  void MergeFrom(const BuyBuffRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BuyBuffRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.BuyBuffRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WeaponBuyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.WeaponBuyReq) */ {
 public:
  WeaponBuyReq();
  virtual ~WeaponBuyReq();

  WeaponBuyReq(const WeaponBuyReq& from);

  inline WeaponBuyReq& operator=(const WeaponBuyReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeaponBuyReq& default_instance();

  static inline const WeaponBuyReq* internal_default_instance() {
    return reinterpret_cast<const WeaponBuyReq*>(
               &_WeaponBuyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(WeaponBuyReq* other);

  // implements Message ----------------------------------------------

  inline WeaponBuyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  WeaponBuyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeaponBuyReq& from);
  void MergeFrom(const WeaponBuyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeaponBuyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.WeaponBuyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WeaponBuyRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.WeaponBuyRsp) */ {
 public:
  WeaponBuyRsp();
  virtual ~WeaponBuyRsp();

  WeaponBuyRsp(const WeaponBuyRsp& from);

  inline WeaponBuyRsp& operator=(const WeaponBuyRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeaponBuyRsp& default_instance();

  static inline const WeaponBuyRsp* internal_default_instance() {
    return reinterpret_cast<const WeaponBuyRsp*>(
               &_WeaponBuyRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(WeaponBuyRsp* other);

  // implements Message ----------------------------------------------

  inline WeaponBuyRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  WeaponBuyRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeaponBuyRsp& from);
  void MergeFrom(const WeaponBuyRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeaponBuyRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .battlespheresproto.UserInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::battlespheresproto::UserInfo& info() const;
  ::battlespheresproto::UserInfo* mutable_info();
  ::battlespheresproto::UserInfo* release_info();
  void set_allocated_info(::battlespheresproto::UserInfo* info);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.WeaponBuyRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::battlespheresproto::UserInfo* info_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WeaponEquipInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.WeaponEquipInfo) */ {
 public:
  WeaponEquipInfo();
  virtual ~WeaponEquipInfo();

  WeaponEquipInfo(const WeaponEquipInfo& from);

  inline WeaponEquipInfo& operator=(const WeaponEquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeaponEquipInfo& default_instance();

  static inline const WeaponEquipInfo* internal_default_instance() {
    return reinterpret_cast<const WeaponEquipInfo*>(
               &_WeaponEquipInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(WeaponEquipInfo* other);

  // implements Message ----------------------------------------------

  inline WeaponEquipInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WeaponEquipInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeaponEquipInfo& from);
  void MergeFrom(const WeaponEquipInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeaponEquipInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.WeaponEquipInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 index_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WeaponEquipReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.WeaponEquipReq) */ {
 public:
  WeaponEquipReq();
  virtual ~WeaponEquipReq();

  WeaponEquipReq(const WeaponEquipReq& from);

  inline WeaponEquipReq& operator=(const WeaponEquipReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeaponEquipReq& default_instance();

  static inline const WeaponEquipReq* internal_default_instance() {
    return reinterpret_cast<const WeaponEquipReq*>(
               &_WeaponEquipReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(WeaponEquipReq* other);

  // implements Message ----------------------------------------------

  inline WeaponEquipReq* New() const PROTOBUF_FINAL { return New(NULL); }

  WeaponEquipReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeaponEquipReq& from);
  void MergeFrom(const WeaponEquipReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeaponEquipReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .battlespheresproto.WeaponEquipInfo infos = 1;
  int infos_size() const;
  void clear_infos();
  static const int kInfosFieldNumber = 1;
  const ::battlespheresproto::WeaponEquipInfo& infos(int index) const;
  ::battlespheresproto::WeaponEquipInfo* mutable_infos(int index);
  ::battlespheresproto::WeaponEquipInfo* add_infos();
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponEquipInfo >*
      mutable_infos();
  const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponEquipInfo >&
      infos() const;

  // @@protoc_insertion_point(class_scope:battlespheresproto.WeaponEquipReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponEquipInfo > infos_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WeaponEquipRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.WeaponEquipRsp) */ {
 public:
  WeaponEquipRsp();
  virtual ~WeaponEquipRsp();

  WeaponEquipRsp(const WeaponEquipRsp& from);

  inline WeaponEquipRsp& operator=(const WeaponEquipRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeaponEquipRsp& default_instance();

  static inline const WeaponEquipRsp* internal_default_instance() {
    return reinterpret_cast<const WeaponEquipRsp*>(
               &_WeaponEquipRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(WeaponEquipRsp* other);

  // implements Message ----------------------------------------------

  inline WeaponEquipRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  WeaponEquipRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeaponEquipRsp& from);
  void MergeFrom(const WeaponEquipRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeaponEquipRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .battlespheresproto.UserInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::battlespheresproto::UserInfo& info() const;
  ::battlespheresproto::UserInfo* mutable_info();
  ::battlespheresproto::UserInfo* release_info();
  void set_allocated_info(::battlespheresproto::UserInfo* info);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.WeaponEquipRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::battlespheresproto::UserInfo* info_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SkillUpgradeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.SkillUpgradeReq) */ {
 public:
  SkillUpgradeReq();
  virtual ~SkillUpgradeReq();

  SkillUpgradeReq(const SkillUpgradeReq& from);

  inline SkillUpgradeReq& operator=(const SkillUpgradeReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillUpgradeReq& default_instance();

  static inline const SkillUpgradeReq* internal_default_instance() {
    return reinterpret_cast<const SkillUpgradeReq*>(
               &_SkillUpgradeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(SkillUpgradeReq* other);

  // implements Message ----------------------------------------------

  inline SkillUpgradeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SkillUpgradeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SkillUpgradeReq& from);
  void MergeFrom(const SkillUpgradeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SkillUpgradeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 skillId = 1;
  void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  ::google::protobuf::int32 skillid() const;
  void set_skillid(::google::protobuf::int32 value);

  // int32 next_lv = 2;
  void clear_next_lv();
  static const int kNextLvFieldNumber = 2;
  ::google::protobuf::int32 next_lv() const;
  void set_next_lv(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.SkillUpgradeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 next_lv_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SkillUpgradeRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.SkillUpgradeRsp) */ {
 public:
  SkillUpgradeRsp();
  virtual ~SkillUpgradeRsp();

  SkillUpgradeRsp(const SkillUpgradeRsp& from);

  inline SkillUpgradeRsp& operator=(const SkillUpgradeRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillUpgradeRsp& default_instance();

  static inline const SkillUpgradeRsp* internal_default_instance() {
    return reinterpret_cast<const SkillUpgradeRsp*>(
               &_SkillUpgradeRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(SkillUpgradeRsp* other);

  // implements Message ----------------------------------------------

  inline SkillUpgradeRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SkillUpgradeRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SkillUpgradeRsp& from);
  void MergeFrom(const SkillUpgradeRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SkillUpgradeRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .battlespheresproto.UserInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::battlespheresproto::UserInfo& info() const;
  ::battlespheresproto::UserInfo* mutable_info();
  ::battlespheresproto::UserInfo* release_info();
  void set_allocated_info(::battlespheresproto::UserInfo* info);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.SkillUpgradeRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::battlespheresproto::UserInfo* info_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FindFBReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.FindFBReq) */ {
 public:
  FindFBReq();
  virtual ~FindFBReq();

  FindFBReq(const FindFBReq& from);

  inline FindFBReq& operator=(const FindFBReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindFBReq& default_instance();

  static inline const FindFBReq* internal_default_instance() {
    return reinterpret_cast<const FindFBReq*>(
               &_FindFBReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(FindFBReq* other);

  // implements Message ----------------------------------------------

  inline FindFBReq* New() const PROTOBUF_FINAL { return New(NULL); }

  FindFBReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FindFBReq& from);
  void MergeFrom(const FindFBReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FindFBReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 fb_id = 1;
  void clear_fb_id();
  static const int kFbIdFieldNumber = 1;
  ::google::protobuf::uint32 fb_id() const;
  void set_fb_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.FindFBReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 fb_id_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FindFBRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.FindFBRsp) */ {
 public:
  FindFBRsp();
  virtual ~FindFBRsp();

  FindFBRsp(const FindFBRsp& from);

  inline FindFBRsp& operator=(const FindFBRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FindFBRsp& default_instance();

  static inline const FindFBRsp* internal_default_instance() {
    return reinterpret_cast<const FindFBRsp*>(
               &_FindFBRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(FindFBRsp* other);

  // implements Message ----------------------------------------------

  inline FindFBRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  FindFBRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FindFBRsp& from);
  void MergeFrom(const FindFBRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FindFBRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .battlespheresproto.RoomPlayerInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::battlespheresproto::RoomPlayerInfo& info() const;
  ::battlespheresproto::RoomPlayerInfo* mutable_info();
  ::battlespheresproto::RoomPlayerInfo* release_info();
  void set_allocated_info(::battlespheresproto::RoomPlayerInfo* info);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.FindFBRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::battlespheresproto::RoomPlayerInfo* info_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvitationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.InvitationReq) */ {
 public:
  InvitationReq();
  virtual ~InvitationReq();

  InvitationReq(const InvitationReq& from);

  inline InvitationReq& operator=(const InvitationReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InvitationReq& default_instance();

  static inline const InvitationReq* internal_default_instance() {
    return reinterpret_cast<const InvitationReq*>(
               &_InvitationReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(InvitationReq* other);

  // implements Message ----------------------------------------------

  inline InvitationReq* New() const PROTOBUF_FINAL { return New(NULL); }

  InvitationReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvitationReq& from);
  void MergeFrom(const InvitationReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvitationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.InvitationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvitationRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.InvitationRsp) */ {
 public:
  InvitationRsp();
  virtual ~InvitationRsp();

  InvitationRsp(const InvitationRsp& from);

  inline InvitationRsp& operator=(const InvitationRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InvitationRsp& default_instance();

  static inline const InvitationRsp* internal_default_instance() {
    return reinterpret_cast<const InvitationRsp*>(
               &_InvitationRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(InvitationRsp* other);

  // implements Message ----------------------------------------------

  inline InvitationRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  InvitationRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvitationRsp& from);
  void MergeFrom(const InvitationRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvitationRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .battlespheresproto.RoomPlayerInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::battlespheresproto::RoomPlayerInfo& info() const;
  ::battlespheresproto::RoomPlayerInfo* mutable_info();
  ::battlespheresproto::RoomPlayerInfo* release_info();
  void set_allocated_info(::battlespheresproto::RoomPlayerInfo* info);

  // @@protoc_insertion_point(class_scope:battlespheresproto.InvitationRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::battlespheresproto::RoomPlayerInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvitationAnswerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.InvitationAnswerReq) */ {
 public:
  InvitationAnswerReq();
  virtual ~InvitationAnswerReq();

  InvitationAnswerReq(const InvitationAnswerReq& from);

  inline InvitationAnswerReq& operator=(const InvitationAnswerReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InvitationAnswerReq& default_instance();

  static inline const InvitationAnswerReq* internal_default_instance() {
    return reinterpret_cast<const InvitationAnswerReq*>(
               &_InvitationAnswerReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(InvitationAnswerReq* other);

  // implements Message ----------------------------------------------

  inline InvitationAnswerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  InvitationAnswerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvitationAnswerReq& from);
  void MergeFrom(const InvitationAnswerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvitationAnswerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.InvitationAnswerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InvitationAnswerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.InvitationAnswerRsp) */ {
 public:
  InvitationAnswerRsp();
  virtual ~InvitationAnswerRsp();

  InvitationAnswerRsp(const InvitationAnswerRsp& from);

  inline InvitationAnswerRsp& operator=(const InvitationAnswerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InvitationAnswerRsp& default_instance();

  static inline const InvitationAnswerRsp* internal_default_instance() {
    return reinterpret_cast<const InvitationAnswerRsp*>(
               &_InvitationAnswerRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(InvitationAnswerRsp* other);

  // implements Message ----------------------------------------------

  inline InvitationAnswerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  InvitationAnswerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InvitationAnswerRsp& from);
  void MergeFrom(const InvitationAnswerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InvitationAnswerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.InvitationAnswerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BattleResultReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.BattleResultReq) */ {
 public:
  BattleResultReq();
  virtual ~BattleResultReq();

  BattleResultReq(const BattleResultReq& from);

  inline BattleResultReq& operator=(const BattleResultReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleResultReq& default_instance();

  static inline const BattleResultReq* internal_default_instance() {
    return reinterpret_cast<const BattleResultReq*>(
               &_BattleResultReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(BattleResultReq* other);

  // implements Message ----------------------------------------------

  inline BattleResultReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BattleResultReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BattleResultReq& from);
  void MergeFrom(const BattleResultReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BattleResultReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 killCount = 1;
  void clear_killcount();
  static const int kKillCountFieldNumber = 1;
  ::google::protobuf::int32 killcount() const;
  void set_killcount(::google::protobuf::int32 value);

  // int32 points = 2;
  void clear_points();
  static const int kPointsFieldNumber = 2;
  ::google::protobuf::int32 points() const;
  void set_points(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.BattleResultReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 killcount_;
  ::google::protobuf::int32 points_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BattleResultRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:battlespheresproto.BattleResultRsp) */ {
 public:
  BattleResultRsp();
  virtual ~BattleResultRsp();

  BattleResultRsp(const BattleResultRsp& from);

  inline BattleResultRsp& operator=(const BattleResultRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleResultRsp& default_instance();

  static inline const BattleResultRsp* internal_default_instance() {
    return reinterpret_cast<const BattleResultRsp*>(
               &_BattleResultRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(BattleResultRsp* other);

  // implements Message ----------------------------------------------

  inline BattleResultRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BattleResultRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BattleResultRsp& from);
  void MergeFrom(const BattleResultRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BattleResultRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .battlespheresproto.UserInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::battlespheresproto::UserInfo& info() const;
  ::battlespheresproto::UserInfo* mutable_info();
  ::battlespheresproto::UserInfo* release_info();
  void set_allocated_info(::battlespheresproto::UserInfo* info);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:battlespheresproto.BattleResultRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::battlespheresproto::UserInfo* info_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct protobuf_battlespheres_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillInfo

// int32 id = 1;
inline void SkillInfo::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 SkillInfo::id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.SkillInfo.id)
  return id_;
}
inline void SkillInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.SkillInfo.id)
}

// int32 level = 2;
inline void SkillInfo::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 SkillInfo::level() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.SkillInfo.level)
  return level_;
}
inline void SkillInfo::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.SkillInfo.level)
}

// -------------------------------------------------------------------

// WeaponProperty

// int32 id = 1;
inline void WeaponProperty::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 WeaponProperty::id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponProperty.id)
  return id_;
}
inline void WeaponProperty::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.WeaponProperty.id)
}

// float value = 2;
inline void WeaponProperty::clear_value() {
  value_ = 0;
}
inline float WeaponProperty::value() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponProperty.value)
  return value_;
}
inline void WeaponProperty::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.WeaponProperty.value)
}

// -------------------------------------------------------------------

// WeaponInfo

// int32 id = 1;
inline void WeaponInfo::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 WeaponInfo::id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponInfo.id)
  return id_;
}
inline void WeaponInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.WeaponInfo.id)
}

// int32 index = 2;
inline void WeaponInfo::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 WeaponInfo::index() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponInfo.index)
  return index_;
}
inline void WeaponInfo::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.WeaponInfo.index)
}

// repeated .battlespheresproto.WeaponProperty weapon_properties = 3;
inline int WeaponInfo::weapon_properties_size() const {
  return weapon_properties_.size();
}
inline void WeaponInfo::clear_weapon_properties() {
  weapon_properties_.Clear();
}
inline const ::battlespheresproto::WeaponProperty& WeaponInfo::weapon_properties(int index) const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponInfo.weapon_properties)
  return weapon_properties_.Get(index);
}
inline ::battlespheresproto::WeaponProperty* WeaponInfo::mutable_weapon_properties(int index) {
  // @@protoc_insertion_point(field_mutable:battlespheresproto.WeaponInfo.weapon_properties)
  return weapon_properties_.Mutable(index);
}
inline ::battlespheresproto::WeaponProperty* WeaponInfo::add_weapon_properties() {
  // @@protoc_insertion_point(field_add:battlespheresproto.WeaponInfo.weapon_properties)
  return weapon_properties_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponProperty >*
WeaponInfo::mutable_weapon_properties() {
  // @@protoc_insertion_point(field_mutable_list:battlespheresproto.WeaponInfo.weapon_properties)
  return &weapon_properties_;
}
inline const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponProperty >&
WeaponInfo::weapon_properties() const {
  // @@protoc_insertion_point(field_list:battlespheresproto.WeaponInfo.weapon_properties)
  return weapon_properties_;
}

// -------------------------------------------------------------------

// MissionInfo

// int32 id = 1;
inline void MissionInfo::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 MissionInfo::id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.MissionInfo.id)
  return id_;
}
inline void MissionInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.MissionInfo.id)
}

// int32 receivedTime = 2;
inline void MissionInfo::clear_receivedtime() {
  receivedtime_ = 0;
}
inline ::google::protobuf::int32 MissionInfo::receivedtime() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.MissionInfo.receivedTime)
  return receivedtime_;
}
inline void MissionInfo::set_receivedtime(::google::protobuf::int32 value) {
  
  receivedtime_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.MissionInfo.receivedTime)
}

// int32 postion = 3;
inline void MissionInfo::clear_postion() {
  postion_ = 0;
}
inline ::google::protobuf::int32 MissionInfo::postion() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.MissionInfo.postion)
  return postion_;
}
inline void MissionInfo::set_postion(::google::protobuf::int32 value) {
  
  postion_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.MissionInfo.postion)
}

// -------------------------------------------------------------------

// MissionProgressInfo

// int32 missionType = 1;
inline void MissionProgressInfo::clear_missiontype() {
  missiontype_ = 0;
}
inline ::google::protobuf::int32 MissionProgressInfo::missiontype() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.MissionProgressInfo.missionType)
  return missiontype_;
}
inline void MissionProgressInfo::set_missiontype(::google::protobuf::int32 value) {
  
  missiontype_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.MissionProgressInfo.missionType)
}

// int32 progress = 2;
inline void MissionProgressInfo::clear_progress() {
  progress_ = 0;
}
inline ::google::protobuf::int32 MissionProgressInfo::progress() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.MissionProgressInfo.progress)
  return progress_;
}
inline void MissionProgressInfo::set_progress(::google::protobuf::int32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.MissionProgressInfo.progress)
}

// int32 expireTime = 3;
inline void MissionProgressInfo::clear_expiretime() {
  expiretime_ = 0;
}
inline ::google::protobuf::int32 MissionProgressInfo::expiretime() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.MissionProgressInfo.expireTime)
  return expiretime_;
}
inline void MissionProgressInfo::set_expiretime(::google::protobuf::int32 value) {
  
  expiretime_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.MissionProgressInfo.expireTime)
}

// -------------------------------------------------------------------

// GameUserInfo

// int32 user_id = 1;
inline void GameUserInfo::clear_user_id() {
  user_id_ = 0;
}
inline ::google::protobuf::int32 GameUserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.GameUserInfo.user_id)
  return user_id_;
}
inline void GameUserInfo::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.GameUserInfo.user_id)
}

// bytes nickname = 2;
inline void GameUserInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameUserInfo::nickname() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.GameUserInfo.nickname)
  return nickname_.GetNoArena();
}
inline void GameUserInfo::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battlespheresproto.GameUserInfo.nickname)
}
#if LANG_CXX11
inline void GameUserInfo::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battlespheresproto.GameUserInfo.nickname)
}
#endif
inline void GameUserInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battlespheresproto.GameUserInfo.nickname)
}
inline void GameUserInfo::set_nickname(const void* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battlespheresproto.GameUserInfo.nickname)
}
inline ::std::string* GameUserInfo::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:battlespheresproto.GameUserInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameUserInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:battlespheresproto.GameUserInfo.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameUserInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.GameUserInfo.nickname)
}

// int32 role_id = 3;
inline void GameUserInfo::clear_role_id() {
  role_id_ = 0;
}
inline ::google::protobuf::int32 GameUserInfo::role_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.GameUserInfo.role_id)
  return role_id_;
}
inline void GameUserInfo::set_role_id(::google::protobuf::int32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.GameUserInfo.role_id)
}

// int32 rank = 4;
inline void GameUserInfo::clear_rank() {
  rank_ = 0;
}
inline ::google::protobuf::int32 GameUserInfo::rank() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.GameUserInfo.rank)
  return rank_;
}
inline void GameUserInfo::set_rank(::google::protobuf::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.GameUserInfo.rank)
}

// int32 coin = 5;
inline void GameUserInfo::clear_coin() {
  coin_ = 0;
}
inline ::google::protobuf::int32 GameUserInfo::coin() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.GameUserInfo.coin)
  return coin_;
}
inline void GameUserInfo::set_coin(::google::protobuf::int32 value) {
  
  coin_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.GameUserInfo.coin)
}

// int32 exp = 6;
inline void GameUserInfo::clear_exp() {
  exp_ = 0;
}
inline ::google::protobuf::int32 GameUserInfo::exp() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.GameUserInfo.exp)
  return exp_;
}
inline void GameUserInfo::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.GameUserInfo.exp)
}

// int32 level = 7;
inline void GameUserInfo::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 GameUserInfo::level() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.GameUserInfo.level)
  return level_;
}
inline void GameUserInfo::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.GameUserInfo.level)
}

// bytes strSkillInfos = 21;
inline void GameUserInfo::clear_strskillinfos() {
  strskillinfos_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameUserInfo::strskillinfos() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.GameUserInfo.strSkillInfos)
  return strskillinfos_.GetNoArena();
}
inline void GameUserInfo::set_strskillinfos(const ::std::string& value) {
  
  strskillinfos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battlespheresproto.GameUserInfo.strSkillInfos)
}
#if LANG_CXX11
inline void GameUserInfo::set_strskillinfos(::std::string&& value) {
  
  strskillinfos_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battlespheresproto.GameUserInfo.strSkillInfos)
}
#endif
inline void GameUserInfo::set_strskillinfos(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strskillinfos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battlespheresproto.GameUserInfo.strSkillInfos)
}
inline void GameUserInfo::set_strskillinfos(const void* value, size_t size) {
  
  strskillinfos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battlespheresproto.GameUserInfo.strSkillInfos)
}
inline ::std::string* GameUserInfo::mutable_strskillinfos() {
  
  // @@protoc_insertion_point(field_mutable:battlespheresproto.GameUserInfo.strSkillInfos)
  return strskillinfos_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameUserInfo::release_strskillinfos() {
  // @@protoc_insertion_point(field_release:battlespheresproto.GameUserInfo.strSkillInfos)
  
  return strskillinfos_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameUserInfo::set_allocated_strskillinfos(::std::string* strskillinfos) {
  if (strskillinfos != NULL) {
    
  } else {
    
  }
  strskillinfos_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strskillinfos);
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.GameUserInfo.strSkillInfos)
}

// bytes strWeaponInfos = 22;
inline void GameUserInfo::clear_strweaponinfos() {
  strweaponinfos_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameUserInfo::strweaponinfos() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.GameUserInfo.strWeaponInfos)
  return strweaponinfos_.GetNoArena();
}
inline void GameUserInfo::set_strweaponinfos(const ::std::string& value) {
  
  strweaponinfos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battlespheresproto.GameUserInfo.strWeaponInfos)
}
#if LANG_CXX11
inline void GameUserInfo::set_strweaponinfos(::std::string&& value) {
  
  strweaponinfos_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battlespheresproto.GameUserInfo.strWeaponInfos)
}
#endif
inline void GameUserInfo::set_strweaponinfos(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strweaponinfos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battlespheresproto.GameUserInfo.strWeaponInfos)
}
inline void GameUserInfo::set_strweaponinfos(const void* value, size_t size) {
  
  strweaponinfos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battlespheresproto.GameUserInfo.strWeaponInfos)
}
inline ::std::string* GameUserInfo::mutable_strweaponinfos() {
  
  // @@protoc_insertion_point(field_mutable:battlespheresproto.GameUserInfo.strWeaponInfos)
  return strweaponinfos_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameUserInfo::release_strweaponinfos() {
  // @@protoc_insertion_point(field_release:battlespheresproto.GameUserInfo.strWeaponInfos)
  
  return strweaponinfos_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameUserInfo::set_allocated_strweaponinfos(::std::string* strweaponinfos) {
  if (strweaponinfos != NULL) {
    
  } else {
    
  }
  strweaponinfos_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strweaponinfos);
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.GameUserInfo.strWeaponInfos)
}

// bytes strprogress = 23;
inline void GameUserInfo::clear_strprogress() {
  strprogress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameUserInfo::strprogress() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.GameUserInfo.strprogress)
  return strprogress_.GetNoArena();
}
inline void GameUserInfo::set_strprogress(const ::std::string& value) {
  
  strprogress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battlespheresproto.GameUserInfo.strprogress)
}
#if LANG_CXX11
inline void GameUserInfo::set_strprogress(::std::string&& value) {
  
  strprogress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battlespheresproto.GameUserInfo.strprogress)
}
#endif
inline void GameUserInfo::set_strprogress(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strprogress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battlespheresproto.GameUserInfo.strprogress)
}
inline void GameUserInfo::set_strprogress(const void* value, size_t size) {
  
  strprogress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battlespheresproto.GameUserInfo.strprogress)
}
inline ::std::string* GameUserInfo::mutable_strprogress() {
  
  // @@protoc_insertion_point(field_mutable:battlespheresproto.GameUserInfo.strprogress)
  return strprogress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameUserInfo::release_strprogress() {
  // @@protoc_insertion_point(field_release:battlespheresproto.GameUserInfo.strprogress)
  
  return strprogress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameUserInfo::set_allocated_strprogress(::std::string* strprogress) {
  if (strprogress != NULL) {
    
  } else {
    
  }
  strprogress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strprogress);
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.GameUserInfo.strprogress)
}

// bytes strMissionInfos = 24;
inline void GameUserInfo::clear_strmissioninfos() {
  strmissioninfos_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameUserInfo::strmissioninfos() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.GameUserInfo.strMissionInfos)
  return strmissioninfos_.GetNoArena();
}
inline void GameUserInfo::set_strmissioninfos(const ::std::string& value) {
  
  strmissioninfos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battlespheresproto.GameUserInfo.strMissionInfos)
}
#if LANG_CXX11
inline void GameUserInfo::set_strmissioninfos(::std::string&& value) {
  
  strmissioninfos_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battlespheresproto.GameUserInfo.strMissionInfos)
}
#endif
inline void GameUserInfo::set_strmissioninfos(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  strmissioninfos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battlespheresproto.GameUserInfo.strMissionInfos)
}
inline void GameUserInfo::set_strmissioninfos(const void* value, size_t size) {
  
  strmissioninfos_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battlespheresproto.GameUserInfo.strMissionInfos)
}
inline ::std::string* GameUserInfo::mutable_strmissioninfos() {
  
  // @@protoc_insertion_point(field_mutable:battlespheresproto.GameUserInfo.strMissionInfos)
  return strmissioninfos_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameUserInfo::release_strmissioninfos() {
  // @@protoc_insertion_point(field_release:battlespheresproto.GameUserInfo.strMissionInfos)
  
  return strmissioninfos_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameUserInfo::set_allocated_strmissioninfos(::std::string* strmissioninfos) {
  if (strmissioninfos != NULL) {
    
  } else {
    
  }
  strmissioninfos_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strmissioninfos);
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.GameUserInfo.strMissionInfos)
}

// -------------------------------------------------------------------

// WeaponInfos

// repeated .battlespheresproto.WeaponInfo weapon_infos = 1;
inline int WeaponInfos::weapon_infos_size() const {
  return weapon_infos_.size();
}
inline void WeaponInfos::clear_weapon_infos() {
  weapon_infos_.Clear();
}
inline const ::battlespheresproto::WeaponInfo& WeaponInfos::weapon_infos(int index) const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponInfos.weapon_infos)
  return weapon_infos_.Get(index);
}
inline ::battlespheresproto::WeaponInfo* WeaponInfos::mutable_weapon_infos(int index) {
  // @@protoc_insertion_point(field_mutable:battlespheresproto.WeaponInfos.weapon_infos)
  return weapon_infos_.Mutable(index);
}
inline ::battlespheresproto::WeaponInfo* WeaponInfos::add_weapon_infos() {
  // @@protoc_insertion_point(field_add:battlespheresproto.WeaponInfos.weapon_infos)
  return weapon_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >*
WeaponInfos::mutable_weapon_infos() {
  // @@protoc_insertion_point(field_mutable_list:battlespheresproto.WeaponInfos.weapon_infos)
  return &weapon_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >&
WeaponInfos::weapon_infos() const {
  // @@protoc_insertion_point(field_list:battlespheresproto.WeaponInfos.weapon_infos)
  return weapon_infos_;
}

// -------------------------------------------------------------------

// SkillInfos

// repeated .battlespheresproto.SkillInfo skill_infos = 1;
inline int SkillInfos::skill_infos_size() const {
  return skill_infos_.size();
}
inline void SkillInfos::clear_skill_infos() {
  skill_infos_.Clear();
}
inline const ::battlespheresproto::SkillInfo& SkillInfos::skill_infos(int index) const {
  // @@protoc_insertion_point(field_get:battlespheresproto.SkillInfos.skill_infos)
  return skill_infos_.Get(index);
}
inline ::battlespheresproto::SkillInfo* SkillInfos::mutable_skill_infos(int index) {
  // @@protoc_insertion_point(field_mutable:battlespheresproto.SkillInfos.skill_infos)
  return skill_infos_.Mutable(index);
}
inline ::battlespheresproto::SkillInfo* SkillInfos::add_skill_infos() {
  // @@protoc_insertion_point(field_add:battlespheresproto.SkillInfos.skill_infos)
  return skill_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::battlespheresproto::SkillInfo >*
SkillInfos::mutable_skill_infos() {
  // @@protoc_insertion_point(field_mutable_list:battlespheresproto.SkillInfos.skill_infos)
  return &skill_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::SkillInfo >&
SkillInfos::skill_infos() const {
  // @@protoc_insertion_point(field_list:battlespheresproto.SkillInfos.skill_infos)
  return skill_infos_;
}

// -------------------------------------------------------------------

// MissionInfos

// repeated .battlespheresproto.MissionInfo mission_infos = 1;
inline int MissionInfos::mission_infos_size() const {
  return mission_infos_.size();
}
inline void MissionInfos::clear_mission_infos() {
  mission_infos_.Clear();
}
inline const ::battlespheresproto::MissionInfo& MissionInfos::mission_infos(int index) const {
  // @@protoc_insertion_point(field_get:battlespheresproto.MissionInfos.mission_infos)
  return mission_infos_.Get(index);
}
inline ::battlespheresproto::MissionInfo* MissionInfos::mutable_mission_infos(int index) {
  // @@protoc_insertion_point(field_mutable:battlespheresproto.MissionInfos.mission_infos)
  return mission_infos_.Mutable(index);
}
inline ::battlespheresproto::MissionInfo* MissionInfos::add_mission_infos() {
  // @@protoc_insertion_point(field_add:battlespheresproto.MissionInfos.mission_infos)
  return mission_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::battlespheresproto::MissionInfo >*
MissionInfos::mutable_mission_infos() {
  // @@protoc_insertion_point(field_mutable_list:battlespheresproto.MissionInfos.mission_infos)
  return &mission_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::MissionInfo >&
MissionInfos::mission_infos() const {
  // @@protoc_insertion_point(field_list:battlespheresproto.MissionInfos.mission_infos)
  return mission_infos_;
}

// -------------------------------------------------------------------

// UserInfo

// int32 user_id = 1;
inline void UserInfo::clear_user_id() {
  user_id_ = 0;
}
inline ::google::protobuf::int32 UserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.UserInfo.user_id)
  return user_id_;
}
inline void UserInfo::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.UserInfo.user_id)
}

// bytes nickname = 3;
inline void UserInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::nickname() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.UserInfo.nickname)
  return nickname_.GetNoArena();
}
inline void UserInfo::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battlespheresproto.UserInfo.nickname)
}
#if LANG_CXX11
inline void UserInfo::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battlespheresproto.UserInfo.nickname)
}
#endif
inline void UserInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battlespheresproto.UserInfo.nickname)
}
inline void UserInfo::set_nickname(const void* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battlespheresproto.UserInfo.nickname)
}
inline ::std::string* UserInfo::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:battlespheresproto.UserInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:battlespheresproto.UserInfo.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.UserInfo.nickname)
}

// int32 role_id = 4;
inline void UserInfo::clear_role_id() {
  role_id_ = 0;
}
inline ::google::protobuf::int32 UserInfo::role_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.UserInfo.role_id)
  return role_id_;
}
inline void UserInfo::set_role_id(::google::protobuf::int32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.UserInfo.role_id)
}

// int32 rank = 17;
inline void UserInfo::clear_rank() {
  rank_ = 0;
}
inline ::google::protobuf::int32 UserInfo::rank() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.UserInfo.rank)
  return rank_;
}
inline void UserInfo::set_rank(::google::protobuf::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.UserInfo.rank)
}

// int32 coin = 18;
inline void UserInfo::clear_coin() {
  coin_ = 0;
}
inline ::google::protobuf::int32 UserInfo::coin() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.UserInfo.coin)
  return coin_;
}
inline void UserInfo::set_coin(::google::protobuf::int32 value) {
  
  coin_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.UserInfo.coin)
}

// int32 exp = 19;
inline void UserInfo::clear_exp() {
  exp_ = 0;
}
inline ::google::protobuf::int32 UserInfo::exp() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.UserInfo.exp)
  return exp_;
}
inline void UserInfo::set_exp(::google::protobuf::int32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.UserInfo.exp)
}

// repeated .battlespheresproto.SkillInfo skill_infos = 21;
inline int UserInfo::skill_infos_size() const {
  return skill_infos_.size();
}
inline void UserInfo::clear_skill_infos() {
  skill_infos_.Clear();
}
inline const ::battlespheresproto::SkillInfo& UserInfo::skill_infos(int index) const {
  // @@protoc_insertion_point(field_get:battlespheresproto.UserInfo.skill_infos)
  return skill_infos_.Get(index);
}
inline ::battlespheresproto::SkillInfo* UserInfo::mutable_skill_infos(int index) {
  // @@protoc_insertion_point(field_mutable:battlespheresproto.UserInfo.skill_infos)
  return skill_infos_.Mutable(index);
}
inline ::battlespheresproto::SkillInfo* UserInfo::add_skill_infos() {
  // @@protoc_insertion_point(field_add:battlespheresproto.UserInfo.skill_infos)
  return skill_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::battlespheresproto::SkillInfo >*
UserInfo::mutable_skill_infos() {
  // @@protoc_insertion_point(field_mutable_list:battlespheresproto.UserInfo.skill_infos)
  return &skill_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::SkillInfo >&
UserInfo::skill_infos() const {
  // @@protoc_insertion_point(field_list:battlespheresproto.UserInfo.skill_infos)
  return skill_infos_;
}

// repeated .battlespheresproto.WeaponInfo weapon_infos = 22;
inline int UserInfo::weapon_infos_size() const {
  return weapon_infos_.size();
}
inline void UserInfo::clear_weapon_infos() {
  weapon_infos_.Clear();
}
inline const ::battlespheresproto::WeaponInfo& UserInfo::weapon_infos(int index) const {
  // @@protoc_insertion_point(field_get:battlespheresproto.UserInfo.weapon_infos)
  return weapon_infos_.Get(index);
}
inline ::battlespheresproto::WeaponInfo* UserInfo::mutable_weapon_infos(int index) {
  // @@protoc_insertion_point(field_mutable:battlespheresproto.UserInfo.weapon_infos)
  return weapon_infos_.Mutable(index);
}
inline ::battlespheresproto::WeaponInfo* UserInfo::add_weapon_infos() {
  // @@protoc_insertion_point(field_add:battlespheresproto.UserInfo.weapon_infos)
  return weapon_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >*
UserInfo::mutable_weapon_infos() {
  // @@protoc_insertion_point(field_mutable_list:battlespheresproto.UserInfo.weapon_infos)
  return &weapon_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >&
UserInfo::weapon_infos() const {
  // @@protoc_insertion_point(field_list:battlespheresproto.UserInfo.weapon_infos)
  return weapon_infos_;
}

// .battlespheresproto.MissionProgressInfo mission_progress_info = 31;
inline bool UserInfo::has_mission_progress_info() const {
  return this != internal_default_instance() && mission_progress_info_ != NULL;
}
inline void UserInfo::clear_mission_progress_info() {
  if (GetArenaNoVirtual() == NULL && mission_progress_info_ != NULL) delete mission_progress_info_;
  mission_progress_info_ = NULL;
}
inline const ::battlespheresproto::MissionProgressInfo& UserInfo::mission_progress_info() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.UserInfo.mission_progress_info)
  return mission_progress_info_ != NULL ? *mission_progress_info_
                         : *::battlespheresproto::MissionProgressInfo::internal_default_instance();
}
inline ::battlespheresproto::MissionProgressInfo* UserInfo::mutable_mission_progress_info() {
  
  if (mission_progress_info_ == NULL) {
    mission_progress_info_ = new ::battlespheresproto::MissionProgressInfo;
  }
  // @@protoc_insertion_point(field_mutable:battlespheresproto.UserInfo.mission_progress_info)
  return mission_progress_info_;
}
inline ::battlespheresproto::MissionProgressInfo* UserInfo::release_mission_progress_info() {
  // @@protoc_insertion_point(field_release:battlespheresproto.UserInfo.mission_progress_info)
  
  ::battlespheresproto::MissionProgressInfo* temp = mission_progress_info_;
  mission_progress_info_ = NULL;
  return temp;
}
inline void UserInfo::set_allocated_mission_progress_info(::battlespheresproto::MissionProgressInfo* mission_progress_info) {
  delete mission_progress_info_;
  mission_progress_info_ = mission_progress_info;
  if (mission_progress_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.UserInfo.mission_progress_info)
}

// repeated .battlespheresproto.MissionInfo mission_infos = 32;
inline int UserInfo::mission_infos_size() const {
  return mission_infos_.size();
}
inline void UserInfo::clear_mission_infos() {
  mission_infos_.Clear();
}
inline const ::battlespheresproto::MissionInfo& UserInfo::mission_infos(int index) const {
  // @@protoc_insertion_point(field_get:battlespheresproto.UserInfo.mission_infos)
  return mission_infos_.Get(index);
}
inline ::battlespheresproto::MissionInfo* UserInfo::mutable_mission_infos(int index) {
  // @@protoc_insertion_point(field_mutable:battlespheresproto.UserInfo.mission_infos)
  return mission_infos_.Mutable(index);
}
inline ::battlespheresproto::MissionInfo* UserInfo::add_mission_infos() {
  // @@protoc_insertion_point(field_add:battlespheresproto.UserInfo.mission_infos)
  return mission_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::battlespheresproto::MissionInfo >*
UserInfo::mutable_mission_infos() {
  // @@protoc_insertion_point(field_mutable_list:battlespheresproto.UserInfo.mission_infos)
  return &mission_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::MissionInfo >&
UserInfo::mission_infos() const {
  // @@protoc_insertion_point(field_list:battlespheresproto.UserInfo.mission_infos)
  return mission_infos_;
}

// -------------------------------------------------------------------

// LoginReq

// string token = 1;
inline void LoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginReq::token() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.LoginReq.token)
  return token_.GetNoArena();
}
inline void LoginReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battlespheresproto.LoginReq.token)
}
#if LANG_CXX11
inline void LoginReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battlespheresproto.LoginReq.token)
}
#endif
inline void LoginReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battlespheresproto.LoginReq.token)
}
inline void LoginReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battlespheresproto.LoginReq.token)
}
inline ::std::string* LoginReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:battlespheresproto.LoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_token() {
  // @@protoc_insertion_point(field_release:battlespheresproto.LoginReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.LoginReq.token)
}

// -------------------------------------------------------------------

// LoginRsp

// int32 result = 1;
inline void LoginRsp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 LoginRsp::result() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.LoginRsp.result)
  return result_;
}
inline void LoginRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.LoginRsp.result)
}

// int32 timestamp = 2;
inline void LoginRsp::clear_timestamp() {
  timestamp_ = 0;
}
inline ::google::protobuf::int32 LoginRsp::timestamp() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.LoginRsp.timestamp)
  return timestamp_;
}
inline void LoginRsp::set_timestamp(::google::protobuf::int32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.LoginRsp.timestamp)
}

// -------------------------------------------------------------------

// CreateRoleReq

// int32 roleId = 1;
inline void CreateRoleReq::clear_roleid() {
  roleid_ = 0;
}
inline ::google::protobuf::int32 CreateRoleReq::roleid() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.CreateRoleReq.roleId)
  return roleid_;
}
inline void CreateRoleReq::set_roleid(::google::protobuf::int32 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.CreateRoleReq.roleId)
}

// bytes nickname = 2;
inline void CreateRoleReq::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateRoleReq::nickname() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.CreateRoleReq.nickname)
  return nickname_.GetNoArena();
}
inline void CreateRoleReq::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battlespheresproto.CreateRoleReq.nickname)
}
#if LANG_CXX11
inline void CreateRoleReq::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battlespheresproto.CreateRoleReq.nickname)
}
#endif
inline void CreateRoleReq::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battlespheresproto.CreateRoleReq.nickname)
}
inline void CreateRoleReq::set_nickname(const void* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battlespheresproto.CreateRoleReq.nickname)
}
inline ::std::string* CreateRoleReq::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:battlespheresproto.CreateRoleReq.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateRoleReq::release_nickname() {
  // @@protoc_insertion_point(field_release:battlespheresproto.CreateRoleReq.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRoleReq::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.CreateRoleReq.nickname)
}

// -------------------------------------------------------------------

// CreateRoleRsp

// int32 result = 1;
inline void CreateRoleRsp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 CreateRoleRsp::result() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.CreateRoleRsp.result)
  return result_;
}
inline void CreateRoleRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.CreateRoleRsp.result)
}

// -------------------------------------------------------------------

// LoadUserDataRsp

// .battlespheresproto.UserInfo info = 1;
inline bool LoadUserDataRsp::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void LoadUserDataRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::battlespheresproto::UserInfo& LoadUserDataRsp::info() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.LoadUserDataRsp.info)
  return info_ != NULL ? *info_
                         : *::battlespheresproto::UserInfo::internal_default_instance();
}
inline ::battlespheresproto::UserInfo* LoadUserDataRsp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::battlespheresproto::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:battlespheresproto.LoadUserDataRsp.info)
  return info_;
}
inline ::battlespheresproto::UserInfo* LoadUserDataRsp::release_info() {
  // @@protoc_insertion_point(field_release:battlespheresproto.LoadUserDataRsp.info)
  
  ::battlespheresproto::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void LoadUserDataRsp::set_allocated_info(::battlespheresproto::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.LoadUserDataRsp.info)
}

// -------------------------------------------------------------------

// PlayerStatus

// int32 id = 1;
inline void PlayerStatus::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 PlayerStatus::id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.PlayerStatus.id)
  return id_;
}
inline void PlayerStatus::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.PlayerStatus.id)
}

// bool isOnline = 2;
inline void PlayerStatus::clear_isonline() {
  isonline_ = false;
}
inline bool PlayerStatus::isonline() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.PlayerStatus.isOnline)
  return isonline_;
}
inline void PlayerStatus::set_isonline(bool value) {
  
  isonline_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.PlayerStatus.isOnline)
}

// -------------------------------------------------------------------

// RoomPlayerInfo

// int32 user_id = 1;
inline void RoomPlayerInfo::clear_user_id() {
  user_id_ = 0;
}
inline ::google::protobuf::int32 RoomPlayerInfo::user_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.RoomPlayerInfo.user_id)
  return user_id_;
}
inline void RoomPlayerInfo::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.RoomPlayerInfo.user_id)
}

// bytes nickname = 3;
inline void RoomPlayerInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoomPlayerInfo::nickname() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.RoomPlayerInfo.nickname)
  return nickname_.GetNoArena();
}
inline void RoomPlayerInfo::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:battlespheresproto.RoomPlayerInfo.nickname)
}
#if LANG_CXX11
inline void RoomPlayerInfo::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:battlespheresproto.RoomPlayerInfo.nickname)
}
#endif
inline void RoomPlayerInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:battlespheresproto.RoomPlayerInfo.nickname)
}
inline void RoomPlayerInfo::set_nickname(const void* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:battlespheresproto.RoomPlayerInfo.nickname)
}
inline ::std::string* RoomPlayerInfo::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:battlespheresproto.RoomPlayerInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomPlayerInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:battlespheresproto.RoomPlayerInfo.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomPlayerInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.RoomPlayerInfo.nickname)
}

// repeated .battlespheresproto.WeaponInfo weapon_infos = 4;
inline int RoomPlayerInfo::weapon_infos_size() const {
  return weapon_infos_.size();
}
inline void RoomPlayerInfo::clear_weapon_infos() {
  weapon_infos_.Clear();
}
inline const ::battlespheresproto::WeaponInfo& RoomPlayerInfo::weapon_infos(int index) const {
  // @@protoc_insertion_point(field_get:battlespheresproto.RoomPlayerInfo.weapon_infos)
  return weapon_infos_.Get(index);
}
inline ::battlespheresproto::WeaponInfo* RoomPlayerInfo::mutable_weapon_infos(int index) {
  // @@protoc_insertion_point(field_mutable:battlespheresproto.RoomPlayerInfo.weapon_infos)
  return weapon_infos_.Mutable(index);
}
inline ::battlespheresproto::WeaponInfo* RoomPlayerInfo::add_weapon_infos() {
  // @@protoc_insertion_point(field_add:battlespheresproto.RoomPlayerInfo.weapon_infos)
  return weapon_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >*
RoomPlayerInfo::mutable_weapon_infos() {
  // @@protoc_insertion_point(field_mutable_list:battlespheresproto.RoomPlayerInfo.weapon_infos)
  return &weapon_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >&
RoomPlayerInfo::weapon_infos() const {
  // @@protoc_insertion_point(field_list:battlespheresproto.RoomPlayerInfo.weapon_infos)
  return weapon_infos_;
}

// -------------------------------------------------------------------

// DismissRoomEvent

// int32 reason = 1;
inline void DismissRoomEvent::clear_reason() {
  reason_ = 0;
}
inline ::google::protobuf::int32 DismissRoomEvent::reason() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.DismissRoomEvent.reason)
  return reason_;
}
inline void DismissRoomEvent::set_reason(::google::protobuf::int32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.DismissRoomEvent.reason)
}

// -------------------------------------------------------------------

// JoinRoomReq

// int32 room_id = 1;
inline void JoinRoomReq::clear_room_id() {
  room_id_ = 0;
}
inline ::google::protobuf::int32 JoinRoomReq::room_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.JoinRoomReq.room_id)
  return room_id_;
}
inline void JoinRoomReq::set_room_id(::google::protobuf::int32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.JoinRoomReq.room_id)
}

// int32 level_id = 2;
inline void JoinRoomReq::clear_level_id() {
  level_id_ = 0;
}
inline ::google::protobuf::int32 JoinRoomReq::level_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.JoinRoomReq.level_id)
  return level_id_;
}
inline void JoinRoomReq::set_level_id(::google::protobuf::int32 value) {
  
  level_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.JoinRoomReq.level_id)
}

// int32 mode = 3;
inline void JoinRoomReq::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 JoinRoomReq::mode() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.JoinRoomReq.mode)
  return mode_;
}
inline void JoinRoomReq::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.JoinRoomReq.mode)
}

// bool private = 4;
inline void JoinRoomReq::clear_private_() {
  private__ = false;
}
inline bool JoinRoomReq::private_() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.JoinRoomReq.private)
  return private__;
}
inline void JoinRoomReq::set_private_(bool value) {
  
  private__ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.JoinRoomReq.private)
}

// repeated .battlespheresproto.WeaponInfo weapon_infos = 5;
inline int JoinRoomReq::weapon_infos_size() const {
  return weapon_infos_.size();
}
inline void JoinRoomReq::clear_weapon_infos() {
  weapon_infos_.Clear();
}
inline const ::battlespheresproto::WeaponInfo& JoinRoomReq::weapon_infos(int index) const {
  // @@protoc_insertion_point(field_get:battlespheresproto.JoinRoomReq.weapon_infos)
  return weapon_infos_.Get(index);
}
inline ::battlespheresproto::WeaponInfo* JoinRoomReq::mutable_weapon_infos(int index) {
  // @@protoc_insertion_point(field_mutable:battlespheresproto.JoinRoomReq.weapon_infos)
  return weapon_infos_.Mutable(index);
}
inline ::battlespheresproto::WeaponInfo* JoinRoomReq::add_weapon_infos() {
  // @@protoc_insertion_point(field_add:battlespheresproto.JoinRoomReq.weapon_infos)
  return weapon_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >*
JoinRoomReq::mutable_weapon_infos() {
  // @@protoc_insertion_point(field_mutable_list:battlespheresproto.JoinRoomReq.weapon_infos)
  return &weapon_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponInfo >&
JoinRoomReq::weapon_infos() const {
  // @@protoc_insertion_point(field_list:battlespheresproto.JoinRoomReq.weapon_infos)
  return weapon_infos_;
}

// -------------------------------------------------------------------

// JoinRoomRsp

// int32 result = 1;
inline void JoinRoomRsp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 JoinRoomRsp::result() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.JoinRoomRsp.result)
  return result_;
}
inline void JoinRoomRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.JoinRoomRsp.result)
}

// int32 room_id = 2;
inline void JoinRoomRsp::clear_room_id() {
  room_id_ = 0;
}
inline ::google::protobuf::int32 JoinRoomRsp::room_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.JoinRoomRsp.room_id)
  return room_id_;
}
inline void JoinRoomRsp::set_room_id(::google::protobuf::int32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.JoinRoomRsp.room_id)
}

// int32 level_id = 3;
inline void JoinRoomRsp::clear_level_id() {
  level_id_ = 0;
}
inline ::google::protobuf::int32 JoinRoomRsp::level_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.JoinRoomRsp.level_id)
  return level_id_;
}
inline void JoinRoomRsp::set_level_id(::google::protobuf::int32 value) {
  
  level_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.JoinRoomRsp.level_id)
}

// int32 owner_id = 4;
inline void JoinRoomRsp::clear_owner_id() {
  owner_id_ = 0;
}
inline ::google::protobuf::int32 JoinRoomRsp::owner_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.JoinRoomRsp.owner_id)
  return owner_id_;
}
inline void JoinRoomRsp::set_owner_id(::google::protobuf::int32 value) {
  
  owner_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.JoinRoomRsp.owner_id)
}

// repeated .battlespheresproto.RoomPlayerInfo other_players = 5;
inline int JoinRoomRsp::other_players_size() const {
  return other_players_.size();
}
inline void JoinRoomRsp::clear_other_players() {
  other_players_.Clear();
}
inline const ::battlespheresproto::RoomPlayerInfo& JoinRoomRsp::other_players(int index) const {
  // @@protoc_insertion_point(field_get:battlespheresproto.JoinRoomRsp.other_players)
  return other_players_.Get(index);
}
inline ::battlespheresproto::RoomPlayerInfo* JoinRoomRsp::mutable_other_players(int index) {
  // @@protoc_insertion_point(field_mutable:battlespheresproto.JoinRoomRsp.other_players)
  return other_players_.Mutable(index);
}
inline ::battlespheresproto::RoomPlayerInfo* JoinRoomRsp::add_other_players() {
  // @@protoc_insertion_point(field_add:battlespheresproto.JoinRoomRsp.other_players)
  return other_players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::battlespheresproto::RoomPlayerInfo >*
JoinRoomRsp::mutable_other_players() {
  // @@protoc_insertion_point(field_mutable_list:battlespheresproto.JoinRoomRsp.other_players)
  return &other_players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::RoomPlayerInfo >&
JoinRoomRsp::other_players() const {
  // @@protoc_insertion_point(field_list:battlespheresproto.JoinRoomRsp.other_players)
  return other_players_;
}

// -------------------------------------------------------------------

// JoinRoomEvent

// .battlespheresproto.RoomPlayerInfo info = 1;
inline bool JoinRoomEvent::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void JoinRoomEvent::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::battlespheresproto::RoomPlayerInfo& JoinRoomEvent::info() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.JoinRoomEvent.info)
  return info_ != NULL ? *info_
                         : *::battlespheresproto::RoomPlayerInfo::internal_default_instance();
}
inline ::battlespheresproto::RoomPlayerInfo* JoinRoomEvent::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::battlespheresproto::RoomPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:battlespheresproto.JoinRoomEvent.info)
  return info_;
}
inline ::battlespheresproto::RoomPlayerInfo* JoinRoomEvent::release_info() {
  // @@protoc_insertion_point(field_release:battlespheresproto.JoinRoomEvent.info)
  
  ::battlespheresproto::RoomPlayerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void JoinRoomEvent::set_allocated_info(::battlespheresproto::RoomPlayerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.JoinRoomEvent.info)
}

// -------------------------------------------------------------------

// QuitRoomReq

// int32 room_id = 1;
inline void QuitRoomReq::clear_room_id() {
  room_id_ = 0;
}
inline ::google::protobuf::int32 QuitRoomReq::room_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.QuitRoomReq.room_id)
  return room_id_;
}
inline void QuitRoomReq::set_room_id(::google::protobuf::int32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.QuitRoomReq.room_id)
}

// -------------------------------------------------------------------

// QuitRoomRsp

// int32 result = 1;
inline void QuitRoomRsp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 QuitRoomRsp::result() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.QuitRoomRsp.result)
  return result_;
}
inline void QuitRoomRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.QuitRoomRsp.result)
}

// -------------------------------------------------------------------

// QuitRoomEvent

// int32 user_id = 1;
inline void QuitRoomEvent::clear_user_id() {
  user_id_ = 0;
}
inline ::google::protobuf::int32 QuitRoomEvent::user_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.QuitRoomEvent.user_id)
  return user_id_;
}
inline void QuitRoomEvent::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.QuitRoomEvent.user_id)
}

// -------------------------------------------------------------------

// BuyBuffReq

// int32 buff_id = 1;
inline void BuyBuffReq::clear_buff_id() {
  buff_id_ = 0;
}
inline ::google::protobuf::int32 BuyBuffReq::buff_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.BuyBuffReq.buff_id)
  return buff_id_;
}
inline void BuyBuffReq::set_buff_id(::google::protobuf::int32 value) {
  
  buff_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.BuyBuffReq.buff_id)
}

// -------------------------------------------------------------------

// BuyBuffRsp

// int32 result = 1;
inline void BuyBuffRsp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 BuyBuffRsp::result() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.BuyBuffRsp.result)
  return result_;
}
inline void BuyBuffRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.BuyBuffRsp.result)
}

// -------------------------------------------------------------------

// WeaponBuyReq

// int32 id = 1;
inline void WeaponBuyReq::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 WeaponBuyReq::id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponBuyReq.id)
  return id_;
}
inline void WeaponBuyReq::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.WeaponBuyReq.id)
}

// -------------------------------------------------------------------

// WeaponBuyRsp

// int32 result = 1;
inline void WeaponBuyRsp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 WeaponBuyRsp::result() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponBuyRsp.result)
  return result_;
}
inline void WeaponBuyRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.WeaponBuyRsp.result)
}

// .battlespheresproto.UserInfo info = 2;
inline bool WeaponBuyRsp::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void WeaponBuyRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::battlespheresproto::UserInfo& WeaponBuyRsp::info() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponBuyRsp.info)
  return info_ != NULL ? *info_
                         : *::battlespheresproto::UserInfo::internal_default_instance();
}
inline ::battlespheresproto::UserInfo* WeaponBuyRsp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::battlespheresproto::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:battlespheresproto.WeaponBuyRsp.info)
  return info_;
}
inline ::battlespheresproto::UserInfo* WeaponBuyRsp::release_info() {
  // @@protoc_insertion_point(field_release:battlespheresproto.WeaponBuyRsp.info)
  
  ::battlespheresproto::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void WeaponBuyRsp::set_allocated_info(::battlespheresproto::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.WeaponBuyRsp.info)
}

// -------------------------------------------------------------------

// WeaponEquipInfo

// int32 id = 1;
inline void WeaponEquipInfo::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 WeaponEquipInfo::id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponEquipInfo.id)
  return id_;
}
inline void WeaponEquipInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.WeaponEquipInfo.id)
}

// int32 index = 2;
inline void WeaponEquipInfo::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 WeaponEquipInfo::index() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponEquipInfo.index)
  return index_;
}
inline void WeaponEquipInfo::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.WeaponEquipInfo.index)
}

// -------------------------------------------------------------------

// WeaponEquipReq

// repeated .battlespheresproto.WeaponEquipInfo infos = 1;
inline int WeaponEquipReq::infos_size() const {
  return infos_.size();
}
inline void WeaponEquipReq::clear_infos() {
  infos_.Clear();
}
inline const ::battlespheresproto::WeaponEquipInfo& WeaponEquipReq::infos(int index) const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponEquipReq.infos)
  return infos_.Get(index);
}
inline ::battlespheresproto::WeaponEquipInfo* WeaponEquipReq::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:battlespheresproto.WeaponEquipReq.infos)
  return infos_.Mutable(index);
}
inline ::battlespheresproto::WeaponEquipInfo* WeaponEquipReq::add_infos() {
  // @@protoc_insertion_point(field_add:battlespheresproto.WeaponEquipReq.infos)
  return infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponEquipInfo >*
WeaponEquipReq::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:battlespheresproto.WeaponEquipReq.infos)
  return &infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::battlespheresproto::WeaponEquipInfo >&
WeaponEquipReq::infos() const {
  // @@protoc_insertion_point(field_list:battlespheresproto.WeaponEquipReq.infos)
  return infos_;
}

// -------------------------------------------------------------------

// WeaponEquipRsp

// int32 result = 1;
inline void WeaponEquipRsp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 WeaponEquipRsp::result() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponEquipRsp.result)
  return result_;
}
inline void WeaponEquipRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.WeaponEquipRsp.result)
}

// .battlespheresproto.UserInfo info = 2;
inline bool WeaponEquipRsp::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void WeaponEquipRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::battlespheresproto::UserInfo& WeaponEquipRsp::info() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.WeaponEquipRsp.info)
  return info_ != NULL ? *info_
                         : *::battlespheresproto::UserInfo::internal_default_instance();
}
inline ::battlespheresproto::UserInfo* WeaponEquipRsp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::battlespheresproto::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:battlespheresproto.WeaponEquipRsp.info)
  return info_;
}
inline ::battlespheresproto::UserInfo* WeaponEquipRsp::release_info() {
  // @@protoc_insertion_point(field_release:battlespheresproto.WeaponEquipRsp.info)
  
  ::battlespheresproto::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void WeaponEquipRsp::set_allocated_info(::battlespheresproto::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.WeaponEquipRsp.info)
}

// -------------------------------------------------------------------

// SkillUpgradeReq

// int32 skillId = 1;
inline void SkillUpgradeReq::clear_skillid() {
  skillid_ = 0;
}
inline ::google::protobuf::int32 SkillUpgradeReq::skillid() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.SkillUpgradeReq.skillId)
  return skillid_;
}
inline void SkillUpgradeReq::set_skillid(::google::protobuf::int32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.SkillUpgradeReq.skillId)
}

// int32 next_lv = 2;
inline void SkillUpgradeReq::clear_next_lv() {
  next_lv_ = 0;
}
inline ::google::protobuf::int32 SkillUpgradeReq::next_lv() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.SkillUpgradeReq.next_lv)
  return next_lv_;
}
inline void SkillUpgradeReq::set_next_lv(::google::protobuf::int32 value) {
  
  next_lv_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.SkillUpgradeReq.next_lv)
}

// -------------------------------------------------------------------

// SkillUpgradeRsp

// int32 result = 1;
inline void SkillUpgradeRsp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 SkillUpgradeRsp::result() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.SkillUpgradeRsp.result)
  return result_;
}
inline void SkillUpgradeRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.SkillUpgradeRsp.result)
}

// .battlespheresproto.UserInfo info = 2;
inline bool SkillUpgradeRsp::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void SkillUpgradeRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::battlespheresproto::UserInfo& SkillUpgradeRsp::info() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.SkillUpgradeRsp.info)
  return info_ != NULL ? *info_
                         : *::battlespheresproto::UserInfo::internal_default_instance();
}
inline ::battlespheresproto::UserInfo* SkillUpgradeRsp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::battlespheresproto::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:battlespheresproto.SkillUpgradeRsp.info)
  return info_;
}
inline ::battlespheresproto::UserInfo* SkillUpgradeRsp::release_info() {
  // @@protoc_insertion_point(field_release:battlespheresproto.SkillUpgradeRsp.info)
  
  ::battlespheresproto::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void SkillUpgradeRsp::set_allocated_info(::battlespheresproto::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.SkillUpgradeRsp.info)
}

// -------------------------------------------------------------------

// FindFBReq

// uint32 fb_id = 1;
inline void FindFBReq::clear_fb_id() {
  fb_id_ = 0u;
}
inline ::google::protobuf::uint32 FindFBReq::fb_id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.FindFBReq.fb_id)
  return fb_id_;
}
inline void FindFBReq::set_fb_id(::google::protobuf::uint32 value) {
  
  fb_id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.FindFBReq.fb_id)
}

// -------------------------------------------------------------------

// FindFBRsp

// int32 result = 1;
inline void FindFBRsp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 FindFBRsp::result() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.FindFBRsp.result)
  return result_;
}
inline void FindFBRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.FindFBRsp.result)
}

// .battlespheresproto.RoomPlayerInfo info = 2;
inline bool FindFBRsp::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void FindFBRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::battlespheresproto::RoomPlayerInfo& FindFBRsp::info() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.FindFBRsp.info)
  return info_ != NULL ? *info_
                         : *::battlespheresproto::RoomPlayerInfo::internal_default_instance();
}
inline ::battlespheresproto::RoomPlayerInfo* FindFBRsp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::battlespheresproto::RoomPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:battlespheresproto.FindFBRsp.info)
  return info_;
}
inline ::battlespheresproto::RoomPlayerInfo* FindFBRsp::release_info() {
  // @@protoc_insertion_point(field_release:battlespheresproto.FindFBRsp.info)
  
  ::battlespheresproto::RoomPlayerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void FindFBRsp::set_allocated_info(::battlespheresproto::RoomPlayerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.FindFBRsp.info)
}

// -------------------------------------------------------------------

// InvitationReq

// uint32 id = 1;
inline void InvitationReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 InvitationReq::id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.InvitationReq.id)
  return id_;
}
inline void InvitationReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.InvitationReq.id)
}

// -------------------------------------------------------------------

// InvitationRsp

// .battlespheresproto.RoomPlayerInfo info = 1;
inline bool InvitationRsp::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void InvitationRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::battlespheresproto::RoomPlayerInfo& InvitationRsp::info() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.InvitationRsp.info)
  return info_ != NULL ? *info_
                         : *::battlespheresproto::RoomPlayerInfo::internal_default_instance();
}
inline ::battlespheresproto::RoomPlayerInfo* InvitationRsp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::battlespheresproto::RoomPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:battlespheresproto.InvitationRsp.info)
  return info_;
}
inline ::battlespheresproto::RoomPlayerInfo* InvitationRsp::release_info() {
  // @@protoc_insertion_point(field_release:battlespheresproto.InvitationRsp.info)
  
  ::battlespheresproto::RoomPlayerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void InvitationRsp::set_allocated_info(::battlespheresproto::RoomPlayerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.InvitationRsp.info)
}

// -------------------------------------------------------------------

// InvitationAnswerReq

// int32 result = 1;
inline void InvitationAnswerReq::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 InvitationAnswerReq::result() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.InvitationAnswerReq.result)
  return result_;
}
inline void InvitationAnswerReq::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.InvitationAnswerReq.result)
}

// uint32 id = 2;
inline void InvitationAnswerReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 InvitationAnswerReq::id() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.InvitationAnswerReq.id)
  return id_;
}
inline void InvitationAnswerReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.InvitationAnswerReq.id)
}

// -------------------------------------------------------------------

// InvitationAnswerRsp

// int32 result = 1;
inline void InvitationAnswerRsp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 InvitationAnswerRsp::result() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.InvitationAnswerRsp.result)
  return result_;
}
inline void InvitationAnswerRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.InvitationAnswerRsp.result)
}

// -------------------------------------------------------------------

// BattleResultReq

// int32 killCount = 1;
inline void BattleResultReq::clear_killcount() {
  killcount_ = 0;
}
inline ::google::protobuf::int32 BattleResultReq::killcount() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.BattleResultReq.killCount)
  return killcount_;
}
inline void BattleResultReq::set_killcount(::google::protobuf::int32 value) {
  
  killcount_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.BattleResultReq.killCount)
}

// int32 points = 2;
inline void BattleResultReq::clear_points() {
  points_ = 0;
}
inline ::google::protobuf::int32 BattleResultReq::points() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.BattleResultReq.points)
  return points_;
}
inline void BattleResultReq::set_points(::google::protobuf::int32 value) {
  
  points_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.BattleResultReq.points)
}

// -------------------------------------------------------------------

// BattleResultRsp

// int32 result = 1;
inline void BattleResultRsp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 BattleResultRsp::result() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.BattleResultRsp.result)
  return result_;
}
inline void BattleResultRsp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:battlespheresproto.BattleResultRsp.result)
}

// .battlespheresproto.UserInfo info = 2;
inline bool BattleResultRsp::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void BattleResultRsp::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::battlespheresproto::UserInfo& BattleResultRsp::info() const {
  // @@protoc_insertion_point(field_get:battlespheresproto.BattleResultRsp.info)
  return info_ != NULL ? *info_
                         : *::battlespheresproto::UserInfo::internal_default_instance();
}
inline ::battlespheresproto::UserInfo* BattleResultRsp::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::battlespheresproto::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:battlespheresproto.BattleResultRsp.info)
  return info_;
}
inline ::battlespheresproto::UserInfo* BattleResultRsp::release_info() {
  // @@protoc_insertion_point(field_release:battlespheresproto.BattleResultRsp.info)
  
  ::battlespheresproto::UserInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void BattleResultRsp::set_allocated_info(::battlespheresproto::UserInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:battlespheresproto.BattleResultRsp.info)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace battlespheresproto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::battlespheresproto::msgId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::battlespheresproto::msgId>() {
  return ::battlespheresproto::msgId_descriptor();
}
template <> struct is_proto_enum< ::battlespheresproto::error_code> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::battlespheresproto::error_code>() {
  return ::battlespheresproto::error_code_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_battlespheres_2eproto__INCLUDED
